import { ElementRef, Renderer2, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import * as i0 from "@angular/core";
export default class DynamicRenderer {
    private vcRef;
    isEmptyElement: (tagName: any) => boolean;
    TagName: any;
    attributes: any;
    actionAttributes: any;
    tagnameTemplateRef: TemplateRef<any>;
    myContent?: any[][];
    useTypeOf(obj: any): string;
    constructor(vcRef: ViewContainerRef);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicRenderer, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicRenderer, "dynamic-renderer, DynamicRenderer", never, { "TagName": { "alias": "TagName"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicA {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicA, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicA, "dynamic-a, DynamicA", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicButton {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicButton, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicButton, "dynamic-button, DynamicButton", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicDiv {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicDiv, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicDiv, "dynamic-div, DynamicDiv", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicSpan {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicSpan, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicSpan, "dynamic-span, DynamicSpan", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicP {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicP, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicP, "dynamic-p, DynamicP", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicImg {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicImg, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicImg, "dynamic-img, DynamicImg", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class DynamicInput {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicInput, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicInput, "dynamic-input, DynamicInput", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class DynamicTextarea {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicTextarea, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicTextarea, "dynamic-textarea, DynamicTextarea", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class DynamicSelect {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicSelect, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicSelect, "dynamic-select, DynamicSelect", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicOption {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicOption, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicOption, "dynamic-option, DynamicOption", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicForm {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicForm, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicForm, "dynamic-form, DynamicForm", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicLabel {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicLabel, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicLabel, "dynamic-label, DynamicLabel", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicUl {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicUl, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicUl, "dynamic-ul, DynamicUl", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicLi {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicLi, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicLi, "dynamic-li, DynamicLi", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicTable {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicTable, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicTable, "dynamic-table, DynamicTable", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicTr {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicTr, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicTr, "dynamic-tr, DynamicTr", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicTd {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicTd, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicTd, "dynamic-td, DynamicTd", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicTh {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicTh, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicTh, "dynamic-th, DynamicTh", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicThead {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicThead, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicThead, "dynamic-thead, DynamicThead", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicTbody {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicTbody, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicTbody, "dynamic-tbody, DynamicTbody", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicFooter {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicFooter, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicFooter, "dynamic-footer, DynamicFooter", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicHeader {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicHeader, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicHeader, "dynamic-header, DynamicHeader", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicNav {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicNav, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicNav, "dynamic-nav, DynamicNav", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicSection {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicSection, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicSection, "dynamic-section, DynamicSection", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicArticle {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicArticle, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicArticle, "dynamic-article, DynamicArticle", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicAside {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicAside, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicAside, "dynamic-aside, DynamicAside", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicH1 {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicH1, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicH1, "dynamic-h1, DynamicH1", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicH2 {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicH2, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicH2, "dynamic-h2, DynamicH2", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicH3 {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicH3, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicH3, "dynamic-h3, DynamicH3", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicH4 {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicH4, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicH4, "dynamic-h4, DynamicH4", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicH5 {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicH5, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicH5, "dynamic-h5, DynamicH5", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicH6 {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicH6, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicH6, "dynamic-h6, DynamicH6", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicBlockquote {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicBlockquote, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicBlockquote, "dynamic-blockquote, DynamicBlockquote", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicCode {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicCode, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicCode, "dynamic-code, DynamicCode", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicPre {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicPre, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicPre, "dynamic-pre, DynamicPre", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicFigure {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicFigure, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicFigure, "dynamic-figure, DynamicFigure", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicFigcaption {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicFigcaption, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicFigcaption, "dynamic-figcaption, DynamicFigcaption", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicVideo {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicVideo, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicVideo, "dynamic-video, DynamicVideo", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicAudio {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicAudio, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicAudio, "dynamic-audio, DynamicAudio", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicCanvas {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicCanvas, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicCanvas, "dynamic-canvas, DynamicCanvas", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export declare class DynamicIframe {
    private renderer;
    attributes: any;
    actionAttributes?: any;
    v: ElementRef;
    _listenerFns: Map<string, () => void>;
    constructor(renderer: Renderer2);
    setAttributes(el: any, value: any, changes?: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicIframe, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicIframe, "dynamic-iframe, DynamicIframe", never, { "attributes": { "alias": "attributes"; "required": false; }; "actionAttributes": { "alias": "actionAttributes"; "required": false; }; }, {}, never, ["*"], true, never>;
}
