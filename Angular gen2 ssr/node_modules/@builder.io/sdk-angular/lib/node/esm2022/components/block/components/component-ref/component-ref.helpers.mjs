import { getBlockProperties } from '../../../../functions/get-block-properties';
export const getWrapperProps = ({ componentOptions, builderBlock, context, componentRef, includeBlockProps, isInteractive, contextValue }) => {
    const wrapperPropsWithAttributes = {
        ...componentOptions,
        /**
         * If `noWrap` is set to `true`, then the block's props/attributes are provided to the
         * component itself directly. Otherwise, they are provided to the wrapper element.
         */
        ...(includeBlockProps ? {
            attributes: getBlockProperties({
                block: builderBlock,
                context: contextValue
            })
        } : {})
    };
    const interactiveElementProps = {
        Wrapper: componentRef,
        block: builderBlock,
        context,
        wrapperProps: componentOptions,
        includeBlockProps
    };
    return isInteractive ? interactiveElementProps : wrapperPropsWithAttributes;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LXJlZi5oZWxwZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvYmxvY2svY29tcG9uZW50cy9jb21wb25lbnQtcmVmL2NvbXBvbmVudC1yZWYuaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQXFCaEYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLENBQUMsRUFDOUIsZ0JBQWdCLEVBQ2hCLFlBQVksRUFDWixPQUFPLEVBQ1AsWUFBWSxFQUNaLGlCQUFpQixFQUNqQixhQUFhLEVBQ2IsWUFBWSxFQUdiLEVBQUUsRUFBRTtJQUNILE1BQU0sMEJBQTBCLEdBQUc7UUFDakMsR0FBRyxnQkFBZ0I7UUFDbkI7OztXQUdHO1FBQ0gsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztZQUN0QixVQUFVLEVBQUUsa0JBQWtCLENBQUM7Z0JBQzdCLEtBQUssRUFBRSxZQUFZO2dCQUNuQixPQUFPLEVBQUUsWUFBWTthQUN0QixDQUFDO1NBQ0gsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0tBQ1IsQ0FBQztJQUNGLE1BQU0sdUJBQXVCLEdBQTRCO1FBQ3ZELE9BQU8sRUFBRSxZQUFZO1FBQ3JCLEtBQUssRUFBRSxZQUFZO1FBQ25CLE9BQU87UUFDUCxZQUFZLEVBQUUsZ0JBQWdCO1FBQzlCLGlCQUFpQjtLQUNsQixDQUFDO0lBQ0YsT0FBTyxhQUFhLENBQUMsQ0FBQyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQywwQkFBMEIsQ0FBQztBQUM5RSxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEJ1aWxkZXJDb250ZXh0SW50ZXJmYWNlLCBSZWdpc3RlcmVkQ29tcG9uZW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbnRleHQvdHlwZXMnO1xuaW1wb3J0IHsgZ2V0QmxvY2tQcm9wZXJ0aWVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vZnVuY3Rpb25zL2dldC1ibG9jay1wcm9wZXJ0aWVzJztcbmltcG9ydCB0eXBlIHsgQnVpbGRlckJsb2NrIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlwZXMvYnVpbGRlci1ibG9jayc7XG5pbXBvcnQgdHlwZSB7IEJ1aWxkZXJEYXRhUHJvcHMgfSBmcm9tICcuLi8uLi8uLi8uLi90eXBlcy9idWlsZGVyLXByb3BzJztcbmltcG9ydCB0eXBlIHsgSW50ZXJhY3RpdmVFbGVtZW50UHJvcHMgfSBmcm9tICcuLi9pbnRlcmFjdGl2ZS1lbGVtZW50JztcbnR5cGUgQ29tcG9uZW50T3B0aW9ucyA9IEJ1aWxkZXJEYXRhUHJvcHMgJiB7XG4gIFtpbmRleDogc3RyaW5nXTogYW55O1xuICBhdHRyaWJ1dGVzPzoge1xuICAgIFtpbmRleDogc3RyaW5nXTogYW55O1xuICB9O1xufTtcbmV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50UHJvcHMge1xuICBjb21wb25lbnRSZWY6IGFueTtcbiAgY29tcG9uZW50T3B0aW9uczogQ29tcG9uZW50T3B0aW9ucztcbiAgYmxvY2tDaGlsZHJlbjogQnVpbGRlckJsb2NrW107XG4gIGNvbnRleHQ6IEJ1aWxkZXJDb250ZXh0SW50ZXJmYWNlO1xuICByZWdpc3RlcmVkQ29tcG9uZW50czogUmVnaXN0ZXJlZENvbXBvbmVudHM7XG4gIGxpbmtDb21wb25lbnQ6IGFueTtcbiAgYnVpbGRlckJsb2NrOiBCdWlsZGVyQmxvY2s7XG4gIGluY2x1ZGVCbG9ja1Byb3BzOiBib29sZWFuO1xuICBpc0ludGVyYWN0aXZlOiBib29sZWFuIHwgdW5kZWZpbmVkO1xufVxuZXhwb3J0IGNvbnN0IGdldFdyYXBwZXJQcm9wcyA9ICh7XG4gIGNvbXBvbmVudE9wdGlvbnMsXG4gIGJ1aWxkZXJCbG9jayxcbiAgY29udGV4dCxcbiAgY29tcG9uZW50UmVmLFxuICBpbmNsdWRlQmxvY2tQcm9wcyxcbiAgaXNJbnRlcmFjdGl2ZSxcbiAgY29udGV4dFZhbHVlXG59OiBPbWl0PENvbXBvbmVudFByb3BzLCAnYmxvY2tDaGlsZHJlbicgfCAncmVnaXN0ZXJlZENvbXBvbmVudHMnPiAmIHtcbiAgY29udGV4dFZhbHVlOiBCdWlsZGVyQ29udGV4dEludGVyZmFjZTtcbn0pID0+IHtcbiAgY29uc3Qgd3JhcHBlclByb3BzV2l0aEF0dHJpYnV0ZXMgPSB7XG4gICAgLi4uY29tcG9uZW50T3B0aW9ucyxcbiAgICAvKipcbiAgICAgKiBJZiBgbm9XcmFwYCBpcyBzZXQgdG8gYHRydWVgLCB0aGVuIHRoZSBibG9jaydzIHByb3BzL2F0dHJpYnV0ZXMgYXJlIHByb3ZpZGVkIHRvIHRoZVxuICAgICAqIGNvbXBvbmVudCBpdHNlbGYgZGlyZWN0bHkuIE90aGVyd2lzZSwgdGhleSBhcmUgcHJvdmlkZWQgdG8gdGhlIHdyYXBwZXIgZWxlbWVudC5cbiAgICAgKi9cbiAgICAuLi4oaW5jbHVkZUJsb2NrUHJvcHMgPyB7XG4gICAgICBhdHRyaWJ1dGVzOiBnZXRCbG9ja1Byb3BlcnRpZXMoe1xuICAgICAgICBibG9jazogYnVpbGRlckJsb2NrLFxuICAgICAgICBjb250ZXh0OiBjb250ZXh0VmFsdWVcbiAgICAgIH0pXG4gICAgfSA6IHt9KVxuICB9O1xuICBjb25zdCBpbnRlcmFjdGl2ZUVsZW1lbnRQcm9wczogSW50ZXJhY3RpdmVFbGVtZW50UHJvcHMgPSB7XG4gICAgV3JhcHBlcjogY29tcG9uZW50UmVmLFxuICAgIGJsb2NrOiBidWlsZGVyQmxvY2ssXG4gICAgY29udGV4dCxcbiAgICB3cmFwcGVyUHJvcHM6IGNvbXBvbmVudE9wdGlvbnMsXG4gICAgaW5jbHVkZUJsb2NrUHJvcHNcbiAgfTtcbiAgcmV0dXJuIGlzSW50ZXJhY3RpdmUgPyBpbnRlcmFjdGl2ZUVsZW1lbnRQcm9wcyA6IHdyYXBwZXJQcm9wc1dpdGhBdHRyaWJ1dGVzO1xufSJdfQ==