const TEXT_STYLE_KEYS = ['color', 'whiteSpace', 'direction', 'hyphens', 'overflowWrap'];
/**
 * Check if the key represent a CSS style property that applies to text
 * See MDN docs for refrence of what properties apply to text.
 * https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Fundamentals#summary
 */
const isTextStyle = (key) => {
    return TEXT_STYLE_KEYS.includes(key) || key.startsWith('font') || key.startsWith('text') || key.startsWith('letter') || key.startsWith('line') || key.startsWith('word') || key.startsWith('writing');
};
/**
 * Extract styles that apply to text from a style object.
 */
export const extractTextStyles = (styles) => {
    const textStyles = {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    Object.entries(styles).forEach(([key, value]) => {
        if (isTextStyle(key)) {
            textStyles[key] = value;
        }
    });
    return textStyles;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdC10ZXh0LXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9mdW5jdGlvbnMvZXh0cmFjdC10ZXh0LXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGVBQWUsR0FBRyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxjQUFjLENBQUMsQ0FBQztBQUV4Rjs7OztHQUlHO0FBQ0gsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFXLEVBQUUsRUFBRTtJQUNsQyxPQUFPLGVBQWUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDeE0sQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLE1BQW9DLEVBQUUsRUFBRTtJQUN4RSxNQUFNLFVBQVUsR0FBaUMsRUFBRSxDQUFDO0lBQ3BELDhEQUE4RDtJQUM5RCxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBYSxFQUFFLEVBQUU7UUFDMUQsSUFBSSxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDcEIsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUN6QjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxVQUFVLENBQUM7QUFDcEIsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVEVYVF9TVFlMRV9LRVlTID0gWydjb2xvcicsICd3aGl0ZVNwYWNlJywgJ2RpcmVjdGlvbicsICdoeXBoZW5zJywgJ292ZXJmbG93V3JhcCddO1xuXG4vKipcbiAqIENoZWNrIGlmIHRoZSBrZXkgcmVwcmVzZW50IGEgQ1NTIHN0eWxlIHByb3BlcnR5IHRoYXQgYXBwbGllcyB0byB0ZXh0XG4gKiBTZWUgTUROIGRvY3MgZm9yIHJlZnJlbmNlIG9mIHdoYXQgcHJvcGVydGllcyBhcHBseSB0byB0ZXh0LlxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9MZWFybi9DU1MvU3R5bGluZ190ZXh0L0Z1bmRhbWVudGFscyNzdW1tYXJ5XG4gKi9cbmNvbnN0IGlzVGV4dFN0eWxlID0gKGtleTogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBURVhUX1NUWUxFX0tFWVMuaW5jbHVkZXMoa2V5KSB8fCBrZXkuc3RhcnRzV2l0aCgnZm9udCcpIHx8IGtleS5zdGFydHNXaXRoKCd0ZXh0JykgfHwga2V5LnN0YXJ0c1dpdGgoJ2xldHRlcicpIHx8IGtleS5zdGFydHNXaXRoKCdsaW5lJykgfHwga2V5LnN0YXJ0c1dpdGgoJ3dvcmQnKSB8fCBrZXkuc3RhcnRzV2l0aCgnd3JpdGluZycpO1xufTtcblxuLyoqXG4gKiBFeHRyYWN0IHN0eWxlcyB0aGF0IGFwcGx5IHRvIHRleHQgZnJvbSBhIHN0eWxlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGNvbnN0IGV4dHJhY3RUZXh0U3R5bGVzID0gKHN0eWxlczogUGFydGlhbDxDU1NTdHlsZURlY2xhcmF0aW9uPikgPT4ge1xuICBjb25zdCB0ZXh0U3R5bGVzOiBQYXJ0aWFsPENTU1N0eWxlRGVjbGFyYXRpb24+ID0ge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIE9iamVjdC5lbnRyaWVzKHN0eWxlcykuZm9yRWFjaCgoW2tleSwgdmFsdWVdOiBbYW55LCBhbnldKSA9PiB7XG4gICAgaWYgKGlzVGV4dFN0eWxlKGtleSkpIHtcbiAgICAgIHRleHRTdHlsZXNba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0ZXh0U3R5bGVzO1xufSJdfQ==