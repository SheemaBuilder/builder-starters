export function filterAttrs(attrs = {}, prefix, isEvent) {
    const result = {};
    for (const attr in attrs) {
        if (!attrs[attr])
            continue;
        if (isEvent && !attr.startsWith(prefix))
            continue;
        const eventName = isEvent ? attr.replace(prefix, '') : attr;
        result[eventName] = attrs[attr];
    }
    return result;
}
/**
 * Svelte SDK: workaround to dynamically provide event handlers to components/elements.
 * https://svelte.dev/repl/1246699e266f41218a8eeb45b9b58b54?version=3.24.1
 */
export function setAttrs(node, attrs = {}) {
    const attrKeys = Object.keys(attrs);
    /**
     *
     * @param {string} attr
     */
    const setup = (attr) => node.addEventListener(attr, attrs[attr]);
    /**
     *
     * @param {string} attr
     */
    const teardown = (attr) => node.removeEventListener(attr, attrs[attr]);
    attrKeys.forEach(setup);
    return {
        update(attrs = {}) {
            const attrKeys = Object.keys(attrs);
            attrKeys.forEach(teardown);
            attrKeys.forEach(setup);
        },
        destroy() {
            attrKeys.forEach(teardown);
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9ibG9ja3MvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsV0FBVyxDQUFDLFFBRXhCLEVBQUUsRUFBRSxNQUFjLEVBQUUsT0FBZ0I7SUFDdEMsTUFBTSxNQUFNLEdBQWlCLEVBQUUsQ0FBQztJQUNoQyxLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtRQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztZQUFFLFNBQVM7UUFDM0IsSUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUFFLFNBQVM7UUFDbEQsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzVELE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLFFBQVEsQ0FBQyxJQUFpQixFQUFFLFFBQWdELEVBQUU7SUFDNUYsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVwQzs7O09BR0c7SUFDSCxNQUFNLEtBQUssR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUV6RTs7O09BR0c7SUFDSCxNQUFNLFFBQVEsR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMvRSxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLE9BQU87UUFDTCxNQUFNLENBQUMsS0FBSyxHQUFHLEVBQUU7WUFDZixNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDM0IsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixDQUFDO1FBQ0QsT0FBTztZQUNMLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDN0IsQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckF0dHJzKGF0dHJzOiB7XG4gIFtpbmRleDogc3RyaW5nXTogYW55O1xufSA9IHt9LCBwcmVmaXg6IHN0cmluZywgaXNFdmVudDogYm9vbGVhbikge1xuICBjb25zdCByZXN1bHQ6IHR5cGVvZiBhdHRycyA9IHt9O1xuICBmb3IgKGNvbnN0IGF0dHIgaW4gYXR0cnMpIHtcbiAgICBpZiAoIWF0dHJzW2F0dHJdKSBjb250aW51ZTtcbiAgICBpZiAoaXNFdmVudCAmJiAhYXR0ci5zdGFydHNXaXRoKHByZWZpeCkpIGNvbnRpbnVlO1xuICAgIGNvbnN0IGV2ZW50TmFtZSA9IGlzRXZlbnQgPyBhdHRyLnJlcGxhY2UocHJlZml4LCAnJykgOiBhdHRyO1xuICAgIHJlc3VsdFtldmVudE5hbWVdID0gYXR0cnNbYXR0cl07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBTdmVsdGUgU0RLOiB3b3JrYXJvdW5kIHRvIGR5bmFtaWNhbGx5IHByb3ZpZGUgZXZlbnQgaGFuZGxlcnMgdG8gY29tcG9uZW50cy9lbGVtZW50cy5cbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9yZXBsLzEyNDY2OTllMjY2ZjQxMjE4YThlZWI0NWI5YjU4YjU0P3ZlcnNpb249My4yNC4xXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRBdHRycyhub2RlOiBIVE1MRWxlbWVudCwgYXR0cnM6IFJlY29yZDxzdHJpbmcsIChldmVudDogRXZlbnQpID0+IHZvaWQ+ID0ge30pIHtcbiAgY29uc3QgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRycyk7XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXG4gICAqL1xuICBjb25zdCBzZXR1cCA9IChhdHRyOiBzdHJpbmcpID0+IG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihhdHRyLCBhdHRyc1thdHRyXSk7XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXG4gICAqL1xuICBjb25zdCB0ZWFyZG93biA9IChhdHRyOiBzdHJpbmcpID0+IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihhdHRyLCBhdHRyc1thdHRyXSk7XG4gIGF0dHJLZXlzLmZvckVhY2goc2V0dXApO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZShhdHRycyA9IHt9KSB7XG4gICAgICBjb25zdCBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJzKTtcbiAgICAgIGF0dHJLZXlzLmZvckVhY2godGVhcmRvd24pO1xuICAgICAgYXR0cktleXMuZm9yRWFjaChzZXR1cCk7XG4gICAgfSxcbiAgICBkZXN0cm95KCkge1xuICAgICAgYXR0cktleXMuZm9yRWFjaCh0ZWFyZG93bik7XG4gICAgfVxuICB9O1xufSJdfQ==