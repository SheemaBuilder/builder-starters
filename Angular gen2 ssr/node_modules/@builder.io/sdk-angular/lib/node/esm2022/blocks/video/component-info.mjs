import { IMAGE_FILE_TYPES, VIDEO_FILE_TYPES } from '../../constants/file-types';
export const componentInfo = {
    name: 'Video',
    canHaveChildren: true,
    defaultStyles: {
        minHeight: '20px',
        minWidth: '20px'
    },
    image: 'https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-videocam-24px%20(1).svg?alt=media&token=49a84e4a-b20e-4977-a650-047f986874bb',
    inputs: [{
            name: 'video',
            type: 'file',
            allowedFileTypes: VIDEO_FILE_TYPES,
            bubble: true,
            defaultValue: 'https://cdn.builder.io/o/assets%2FYJIGb4i01jvw0SRdL5Bt%2Fd27731a526464deba0016216f5f9e570%2Fcompressed?apiKey=YJIGb4i01jvw0SRdL5Bt&token=d27731a526464deba0016216f5f9e570&alt=media&optimized=true',
            required: true
        }, {
            name: 'posterImage',
            type: 'file',
            allowedFileTypes: IMAGE_FILE_TYPES,
            helperText: 'Image to show before the video plays'
        }, {
            name: 'autoPlay',
            type: 'boolean',
            defaultValue: true
        }, {
            name: 'controls',
            type: 'boolean',
            defaultValue: false
        }, {
            name: 'muted',
            type: 'boolean',
            defaultValue: true
        }, {
            name: 'loop',
            type: 'boolean',
            defaultValue: true
        }, {
            name: 'playsInline',
            type: 'boolean',
            defaultValue: true
        }, {
            name: 'fit',
            type: 'text',
            defaultValue: 'cover',
            enum: ['contain', 'cover', 'fill', 'auto']
        }, {
            name: 'preload',
            type: 'text',
            defaultValue: 'metadata',
            enum: ['auto', 'metadata', 'none']
        }, {
            name: 'fitContent',
            type: 'boolean',
            helperText: 'When child blocks are provided, fit to them instead of using the aspect ratio',
            defaultValue: true,
            advanced: true
        }, {
            name: 'position',
            type: 'text',
            defaultValue: 'center',
            enum: ['center', 'top', 'left', 'right', 'bottom', 'top left', 'top right', 'bottom left', 'bottom right']
        }, {
            name: 'height',
            type: 'number',
            advanced: true
        }, {
            name: 'width',
            type: 'number',
            advanced: true
        }, {
            name: 'aspectRatio',
            type: 'number',
            advanced: true,
            defaultValue: 0.7004048582995948
        }, {
            name: 'lazyLoad',
            type: 'boolean',
            helperText: 'Load this video "lazily" - as in only when a user scrolls near the video. Recommended for optmized performance and bandwidth consumption',
            defaultValue: true,
            advanced: true
        }],
    shouldReceiveBuilderProps: {
        builderBlock: true
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWluZm8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvYmxvY2tzL3ZpZGVvL2NvbXBvbmVudC1pbmZvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWhGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBa0I7SUFDMUMsSUFBSSxFQUFFLE9BQU87SUFDYixlQUFlLEVBQUUsSUFBSTtJQUNyQixhQUFhLEVBQUU7UUFDYixTQUFTLEVBQUUsTUFBTTtRQUNqQixRQUFRLEVBQUUsTUFBTTtLQUNqQjtJQUNELEtBQUssRUFBRSx3S0FBd0s7SUFDL0ssTUFBTSxFQUFFLENBQUM7WUFDUCxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxNQUFNO1lBQ1osZ0JBQWdCLEVBQUUsZ0JBQWdCO1lBQ2xDLE1BQU0sRUFBRSxJQUFJO1lBQ1osWUFBWSxFQUFFLG9NQUFvTTtZQUNsTixRQUFRLEVBQUUsSUFBSTtTQUNmLEVBQUU7WUFDRCxJQUFJLEVBQUUsYUFBYTtZQUNuQixJQUFJLEVBQUUsTUFBTTtZQUNaLGdCQUFnQixFQUFFLGdCQUFnQjtZQUNsQyxVQUFVLEVBQUUsc0NBQXNDO1NBQ25ELEVBQUU7WUFDRCxJQUFJLEVBQUUsVUFBVTtZQUNoQixJQUFJLEVBQUUsU0FBUztZQUNmLFlBQVksRUFBRSxJQUFJO1NBQ25CLEVBQUU7WUFDRCxJQUFJLEVBQUUsVUFBVTtZQUNoQixJQUFJLEVBQUUsU0FBUztZQUNmLFlBQVksRUFBRSxLQUFLO1NBQ3BCLEVBQUU7WUFDRCxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxTQUFTO1lBQ2YsWUFBWSxFQUFFLElBQUk7U0FDbkIsRUFBRTtZQUNELElBQUksRUFBRSxNQUFNO1lBQ1osSUFBSSxFQUFFLFNBQVM7WUFDZixZQUFZLEVBQUUsSUFBSTtTQUNuQixFQUFFO1lBQ0QsSUFBSSxFQUFFLGFBQWE7WUFDbkIsSUFBSSxFQUFFLFNBQVM7WUFDZixZQUFZLEVBQUUsSUFBSTtTQUNuQixFQUFFO1lBQ0QsSUFBSSxFQUFFLEtBQUs7WUFDWCxJQUFJLEVBQUUsTUFBTTtZQUNaLFlBQVksRUFBRSxPQUFPO1lBQ3JCLElBQUksRUFBRSxDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQztTQUMzQyxFQUFFO1lBQ0QsSUFBSSxFQUFFLFNBQVM7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFlBQVksRUFBRSxVQUFVO1lBQ3hCLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDO1NBQ25DLEVBQUU7WUFDRCxJQUFJLEVBQUUsWUFBWTtZQUNsQixJQUFJLEVBQUUsU0FBUztZQUNmLFVBQVUsRUFBRSwrRUFBK0U7WUFDM0YsWUFBWSxFQUFFLElBQUk7WUFDbEIsUUFBUSxFQUFFLElBQUk7U0FDZixFQUFFO1lBQ0QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsSUFBSSxFQUFFLE1BQU07WUFDWixZQUFZLEVBQUUsUUFBUTtZQUN0QixJQUFJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLGNBQWMsQ0FBQztTQUMzRyxFQUFFO1lBQ0QsSUFBSSxFQUFFLFFBQVE7WUFDZCxJQUFJLEVBQUUsUUFBUTtZQUNkLFFBQVEsRUFBRSxJQUFJO1NBQ2YsRUFBRTtZQUNELElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLFFBQVE7WUFDZCxRQUFRLEVBQUUsSUFBSTtTQUNmLEVBQUU7WUFDRCxJQUFJLEVBQUUsYUFBYTtZQUNuQixJQUFJLEVBQUUsUUFBUTtZQUNkLFFBQVEsRUFBRSxJQUFJO1lBQ2QsWUFBWSxFQUFFLGtCQUFrQjtTQUNqQyxFQUFFO1lBQ0QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsSUFBSSxFQUFFLFNBQVM7WUFDZixVQUFVLEVBQUUsMElBQTBJO1lBQ3RKLFlBQVksRUFBRSxJQUFJO1lBQ2xCLFFBQVEsRUFBRSxJQUFJO1NBQ2YsQ0FBQztJQUNGLHlCQUF5QixFQUFFO1FBQ3pCLFlBQVksRUFBRSxJQUFJO0tBQ25CO0NBQ0YsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElNQUdFX0ZJTEVfVFlQRVMsIFZJREVPX0ZJTEVfVFlQRVMgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvZmlsZS10eXBlcyc7XG5pbXBvcnQgdHlwZSB7IENvbXBvbmVudEluZm8gfSBmcm9tICcuLi8uLi90eXBlcy9jb21wb25lbnRzJztcbmV4cG9ydCBjb25zdCBjb21wb25lbnRJbmZvOiBDb21wb25lbnRJbmZvID0ge1xuICBuYW1lOiAnVmlkZW8nLFxuICBjYW5IYXZlQ2hpbGRyZW46IHRydWUsXG4gIGRlZmF1bHRTdHlsZXM6IHtcbiAgICBtaW5IZWlnaHQ6ICcyMHB4JyxcbiAgICBtaW5XaWR0aDogJzIwcHgnXG4gIH0sXG4gIGltYWdlOiAnaHR0cHM6Ly9maXJlYmFzZXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vdjAvYi9idWlsZGVyLTNiMGEyLmFwcHNwb3QuY29tL28vaW1hZ2VzJTJGYmFzZWxpbmUtdmlkZW9jYW0tMjRweCUyMCgxKS5zdmc/YWx0PW1lZGlhJnRva2VuPTQ5YTg0ZTRhLWIyMGUtNDk3Ny1hNjUwLTA0N2Y5ODY4NzRiYicsXG4gIGlucHV0czogW3tcbiAgICBuYW1lOiAndmlkZW8nLFxuICAgIHR5cGU6ICdmaWxlJyxcbiAgICBhbGxvd2VkRmlsZVR5cGVzOiBWSURFT19GSUxFX1RZUEVTLFxuICAgIGJ1YmJsZTogdHJ1ZSxcbiAgICBkZWZhdWx0VmFsdWU6ICdodHRwczovL2Nkbi5idWlsZGVyLmlvL28vYXNzZXRzJTJGWUpJR2I0aTAxanZ3MFNSZEw1QnQlMkZkMjc3MzFhNTI2NDY0ZGViYTAwMTYyMTZmNWY5ZTU3MCUyRmNvbXByZXNzZWQ/YXBpS2V5PVlKSUdiNGkwMWp2dzBTUmRMNUJ0JnRva2VuPWQyNzczMWE1MjY0NjRkZWJhMDAxNjIxNmY1ZjllNTcwJmFsdD1tZWRpYSZvcHRpbWl6ZWQ9dHJ1ZScsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSwge1xuICAgIG5hbWU6ICdwb3N0ZXJJbWFnZScsXG4gICAgdHlwZTogJ2ZpbGUnLFxuICAgIGFsbG93ZWRGaWxlVHlwZXM6IElNQUdFX0ZJTEVfVFlQRVMsXG4gICAgaGVscGVyVGV4dDogJ0ltYWdlIHRvIHNob3cgYmVmb3JlIHRoZSB2aWRlbyBwbGF5cydcbiAgfSwge1xuICAgIG5hbWU6ICdhdXRvUGxheScsXG4gICAgdHlwZTogJ2Jvb2xlYW4nLFxuICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZVxuICB9LCB7XG4gICAgbmFtZTogJ2NvbnRyb2xzJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgZGVmYXVsdFZhbHVlOiBmYWxzZVxuICB9LCB7XG4gICAgbmFtZTogJ211dGVkJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgZGVmYXVsdFZhbHVlOiB0cnVlXG4gIH0sIHtcbiAgICBuYW1lOiAnbG9vcCcsXG4gICAgdHlwZTogJ2Jvb2xlYW4nLFxuICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZVxuICB9LCB7XG4gICAgbmFtZTogJ3BsYXlzSW5saW5lJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgZGVmYXVsdFZhbHVlOiB0cnVlXG4gIH0sIHtcbiAgICBuYW1lOiAnZml0JyxcbiAgICB0eXBlOiAndGV4dCcsXG4gICAgZGVmYXVsdFZhbHVlOiAnY292ZXInLFxuICAgIGVudW06IFsnY29udGFpbicsICdjb3ZlcicsICdmaWxsJywgJ2F1dG8nXVxuICB9LCB7XG4gICAgbmFtZTogJ3ByZWxvYWQnLFxuICAgIHR5cGU6ICd0ZXh0JyxcbiAgICBkZWZhdWx0VmFsdWU6ICdtZXRhZGF0YScsXG4gICAgZW51bTogWydhdXRvJywgJ21ldGFkYXRhJywgJ25vbmUnXVxuICB9LCB7XG4gICAgbmFtZTogJ2ZpdENvbnRlbnQnLFxuICAgIHR5cGU6ICdib29sZWFuJyxcbiAgICBoZWxwZXJUZXh0OiAnV2hlbiBjaGlsZCBibG9ja3MgYXJlIHByb3ZpZGVkLCBmaXQgdG8gdGhlbSBpbnN0ZWFkIG9mIHVzaW5nIHRoZSBhc3BlY3QgcmF0aW8nLFxuICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZSxcbiAgICBhZHZhbmNlZDogdHJ1ZVxuICB9LCB7XG4gICAgbmFtZTogJ3Bvc2l0aW9uJyxcbiAgICB0eXBlOiAndGV4dCcsXG4gICAgZGVmYXVsdFZhbHVlOiAnY2VudGVyJyxcbiAgICBlbnVtOiBbJ2NlbnRlcicsICd0b3AnLCAnbGVmdCcsICdyaWdodCcsICdib3R0b20nLCAndG9wIGxlZnQnLCAndG9wIHJpZ2h0JywgJ2JvdHRvbSBsZWZ0JywgJ2JvdHRvbSByaWdodCddXG4gIH0sIHtcbiAgICBuYW1lOiAnaGVpZ2h0JyxcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBhZHZhbmNlZDogdHJ1ZVxuICB9LCB7XG4gICAgbmFtZTogJ3dpZHRoJyxcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBhZHZhbmNlZDogdHJ1ZVxuICB9LCB7XG4gICAgbmFtZTogJ2FzcGVjdFJhdGlvJyxcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBhZHZhbmNlZDogdHJ1ZSxcbiAgICBkZWZhdWx0VmFsdWU6IDAuNzAwNDA0ODU4Mjk5NTk0OFxuICB9LCB7XG4gICAgbmFtZTogJ2xhenlMb2FkJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgaGVscGVyVGV4dDogJ0xvYWQgdGhpcyB2aWRlbyBcImxhemlseVwiIC0gYXMgaW4gb25seSB3aGVuIGEgdXNlciBzY3JvbGxzIG5lYXIgdGhlIHZpZGVvLiBSZWNvbW1lbmRlZCBmb3Igb3B0bWl6ZWQgcGVyZm9ybWFuY2UgYW5kIGJhbmR3aWR0aCBjb25zdW1wdGlvbicsXG4gICAgZGVmYXVsdFZhbHVlOiB0cnVlLFxuICAgIGFkdmFuY2VkOiB0cnVlXG4gIH1dLFxuICBzaG91bGRSZWNlaXZlQnVpbGRlclByb3BzOiB7XG4gICAgYnVpbGRlckJsb2NrOiB0cnVlXG4gIH1cbn0iXX0=