const defaultTab = {
    '@type': '@builder.io/sdk:Element',
    responsiveStyles: {
        large: {
            paddingLeft: '20px',
            paddingRight: '20px',
            paddingTop: '10px',
            paddingBottom: '10px',
            minWidth: '100px',
            textAlign: 'center',
            display: 'flex',
            flexDirection: 'column',
            cursor: 'pointer',
            userSelect: 'none'
        }
    },
    component: {
        name: 'Text',
        options: {
            text: 'New tab'
        }
    }
};
const defaultElement = {
    '@type': '@builder.io/sdk:Element',
    responsiveStyles: {
        large: {
            height: '200px',
            display: 'flex',
            marginTop: '20px',
            flexDirection: 'column'
        }
    },
    component: {
        name: 'Text',
        options: {
            text: 'New tab content '
        }
    }
};
export const componentInfo = {
    name: 'Builder: Tabs',
    inputs: [{
            name: 'tabs',
            type: 'list',
            broadcast: true,
            subFields: [{
                    name: 'label',
                    type: 'uiBlocks',
                    hideFromUI: true,
                    defaultValue: [defaultTab]
                }, {
                    name: 'content',
                    type: 'uiBlocks',
                    hideFromUI: true,
                    defaultValue: [defaultElement]
                }],
            defaultValue: [{
                    label: [{
                            ...defaultTab,
                            component: {
                                name: 'Text',
                                options: {
                                    text: 'Tab 1'
                                }
                            }
                        }],
                    content: [{
                            ...defaultElement,
                            component: {
                                name: 'Text',
                                options: {
                                    text: 'Tab 1 content'
                                }
                            }
                        }]
                }, {
                    label: [{
                            ...defaultTab,
                            component: {
                                name: 'Text',
                                options: {
                                    text: 'Tab 2'
                                }
                            }
                        }],
                    content: [{
                            ...defaultElement,
                            component: {
                                name: 'Text',
                                options: {
                                    text: 'Tab 2 content'
                                }
                            }
                        }]
                }]
        }, {
            name: 'activeTabStyle',
            type: 'uiStyle',
            helperText: 'CSS styles for the active tab',
            defaultValue: {
                backgroundColor: 'rgba(0, 0, 0, 0.1)'
            }
        }, {
            name: 'defaultActiveTab',
            type: 'number',
            helperText: 'Default tab to open to. Set to "1" for the first tab, "2" for the second, or choose "0" for none',
            defaultValue: 1,
            advanced: true
        }, {
            name: 'collapsible',
            type: 'boolean',
            helperText: 'If on, clicking an open tab closes it so no tabs are active',
            defaultValue: false,
            advanced: true
        }, {
            name: 'tabHeaderLayout',
            type: 'enum',
            helperText: 'Change the layout of the tab headers (uses justify-content)',
            defaultValue: 'flex-start',
            enum: [{
                    label: 'Center',
                    value: 'center'
                }, {
                    label: 'Space between',
                    value: 'space-between'
                }, {
                    label: 'Space around',
                    value: 'space-around'
                }, {
                    label: 'Left',
                    value: 'flex-start'
                }, {
                    label: 'Right',
                    value: 'flex-end'
                }]
        }],
    shouldReceiveBuilderProps: {
        builderBlock: true,
        builderContext: true,
        builderComponents: true,
        builderLinkComponent: true
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWluZm8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvYmxvY2tzL3RhYnMvY29tcG9uZW50LWluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxVQUFVLEdBQUc7SUFDakIsT0FBTyxFQUFFLHlCQUF5QjtJQUNsQyxnQkFBZ0IsRUFBRTtRQUNoQixLQUFLLEVBQUU7WUFDTCxXQUFXLEVBQUUsTUFBTTtZQUNuQixZQUFZLEVBQUUsTUFBTTtZQUNwQixVQUFVLEVBQUUsTUFBTTtZQUNsQixhQUFhLEVBQUUsTUFBTTtZQUNyQixRQUFRLEVBQUUsT0FBTztZQUNqQixTQUFTLEVBQUUsUUFBUTtZQUNuQixPQUFPLEVBQUUsTUFBTTtZQUNmLGFBQWEsRUFBRSxRQUFRO1lBQ3ZCLE1BQU0sRUFBRSxTQUFTO1lBQ2pCLFVBQVUsRUFBRSxNQUFNO1NBQ25CO0tBQ0Y7SUFDRCxTQUFTLEVBQUU7UUFDVCxJQUFJLEVBQUUsTUFBTTtRQUNaLE9BQU8sRUFBRTtZQUNQLElBQUksRUFBRSxTQUFTO1NBQ2hCO0tBQ0Y7Q0FDRixDQUFDO0FBQ0YsTUFBTSxjQUFjLEdBQUc7SUFDckIsT0FBTyxFQUFFLHlCQUF5QjtJQUNsQyxnQkFBZ0IsRUFBRTtRQUNoQixLQUFLLEVBQUU7WUFDTCxNQUFNLEVBQUUsT0FBTztZQUNmLE9BQU8sRUFBRSxNQUFNO1lBQ2YsU0FBUyxFQUFFLE1BQU07WUFDakIsYUFBYSxFQUFFLFFBQVE7U0FDeEI7S0FDRjtJQUNELFNBQVMsRUFBRTtRQUNULElBQUksRUFBRSxNQUFNO1FBQ1osT0FBTyxFQUFFO1lBQ1AsSUFBSSxFQUFFLGtCQUFrQjtTQUN6QjtLQUNGO0NBQ0YsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBa0I7SUFDMUMsSUFBSSxFQUFFLGVBQWU7SUFDckIsTUFBTSxFQUFFLENBQUM7WUFDUCxJQUFJLEVBQUUsTUFBTTtZQUNaLElBQUksRUFBRSxNQUFNO1lBQ1osU0FBUyxFQUFFLElBQUk7WUFDZixTQUFTLEVBQUUsQ0FBQztvQkFDVixJQUFJLEVBQUUsT0FBTztvQkFDYixJQUFJLEVBQUUsVUFBVTtvQkFDaEIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFlBQVksRUFBRSxDQUFDLFVBQVUsQ0FBQztpQkFDM0IsRUFBRTtvQkFDRCxJQUFJLEVBQUUsU0FBUztvQkFDZixJQUFJLEVBQUUsVUFBVTtvQkFDaEIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFlBQVksRUFBRSxDQUFDLGNBQWMsQ0FBQztpQkFDL0IsQ0FBQztZQUNGLFlBQVksRUFBRSxDQUFDO29CQUNiLEtBQUssRUFBRSxDQUFDOzRCQUNOLEdBQUcsVUFBVTs0QkFDYixTQUFTLEVBQUU7Z0NBQ1QsSUFBSSxFQUFFLE1BQU07Z0NBQ1osT0FBTyxFQUFFO29DQUNQLElBQUksRUFBRSxPQUFPO2lDQUNkOzZCQUNGO3lCQUNGLENBQUM7b0JBQ0YsT0FBTyxFQUFFLENBQUM7NEJBQ1IsR0FBRyxjQUFjOzRCQUNqQixTQUFTLEVBQUU7Z0NBQ1QsSUFBSSxFQUFFLE1BQU07Z0NBQ1osT0FBTyxFQUFFO29DQUNQLElBQUksRUFBRSxlQUFlO2lDQUN0Qjs2QkFDRjt5QkFDRixDQUFDO2lCQUNILEVBQUU7b0JBQ0QsS0FBSyxFQUFFLENBQUM7NEJBQ04sR0FBRyxVQUFVOzRCQUNiLFNBQVMsRUFBRTtnQ0FDVCxJQUFJLEVBQUUsTUFBTTtnQ0FDWixPQUFPLEVBQUU7b0NBQ1AsSUFBSSxFQUFFLE9BQU87aUNBQ2Q7NkJBQ0Y7eUJBQ0YsQ0FBQztvQkFDRixPQUFPLEVBQUUsQ0FBQzs0QkFDUixHQUFHLGNBQWM7NEJBQ2pCLFNBQVMsRUFBRTtnQ0FDVCxJQUFJLEVBQUUsTUFBTTtnQ0FDWixPQUFPLEVBQUU7b0NBQ1AsSUFBSSxFQUFFLGVBQWU7aUNBQ3RCOzZCQUNGO3lCQUNGLENBQUM7aUJBQ0gsQ0FBQztTQUNILEVBQUU7WUFDRCxJQUFJLEVBQUUsZ0JBQWdCO1lBQ3RCLElBQUksRUFBRSxTQUFTO1lBQ2YsVUFBVSxFQUFFLCtCQUErQjtZQUMzQyxZQUFZLEVBQUU7Z0JBQ1osZUFBZSxFQUFFLG9CQUFvQjthQUN0QztTQUNGLEVBQUU7WUFDRCxJQUFJLEVBQUUsa0JBQWtCO1lBQ3hCLElBQUksRUFBRSxRQUFRO1lBQ2QsVUFBVSxFQUFFLGtHQUFrRztZQUM5RyxZQUFZLEVBQUUsQ0FBQztZQUNmLFFBQVEsRUFBRSxJQUFJO1NBQ2YsRUFBRTtZQUNELElBQUksRUFBRSxhQUFhO1lBQ25CLElBQUksRUFBRSxTQUFTO1lBQ2YsVUFBVSxFQUFFLDZEQUE2RDtZQUN6RSxZQUFZLEVBQUUsS0FBSztZQUNuQixRQUFRLEVBQUUsSUFBSTtTQUNmLEVBQUU7WUFDRCxJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLElBQUksRUFBRSxNQUFNO1lBQ1osVUFBVSxFQUFFLDZEQUE2RDtZQUN6RSxZQUFZLEVBQUUsWUFBWTtZQUMxQixJQUFJLEVBQUUsQ0FBQztvQkFDTCxLQUFLLEVBQUUsUUFBUTtvQkFDZixLQUFLLEVBQUUsUUFBUTtpQkFDaEIsRUFBRTtvQkFDRCxLQUFLLEVBQUUsZUFBZTtvQkFDdEIsS0FBSyxFQUFFLGVBQWU7aUJBQ3ZCLEVBQUU7b0JBQ0QsS0FBSyxFQUFFLGNBQWM7b0JBQ3JCLEtBQUssRUFBRSxjQUFjO2lCQUN0QixFQUFFO29CQUNELEtBQUssRUFBRSxNQUFNO29CQUNiLEtBQUssRUFBRSxZQUFZO2lCQUNwQixFQUFFO29CQUNELEtBQUssRUFBRSxPQUFPO29CQUNkLEtBQUssRUFBRSxVQUFVO2lCQUNsQixDQUFDO1NBQ0gsQ0FBQztJQUNGLHlCQUF5QixFQUFFO1FBQ3pCLFlBQVksRUFBRSxJQUFJO1FBQ2xCLGNBQWMsRUFBRSxJQUFJO1FBQ3BCLGlCQUFpQixFQUFFLElBQUk7UUFDdkIsb0JBQW9CLEVBQUUsSUFBSTtLQUMzQjtDQUNGLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IENvbXBvbmVudEluZm8gfSBmcm9tICcuLi8uLi90eXBlcy9jb21wb25lbnRzJztcbmNvbnN0IGRlZmF1bHRUYWIgPSB7XG4gICdAdHlwZSc6ICdAYnVpbGRlci5pby9zZGs6RWxlbWVudCcsXG4gIHJlc3BvbnNpdmVTdHlsZXM6IHtcbiAgICBsYXJnZToge1xuICAgICAgcGFkZGluZ0xlZnQ6ICcyMHB4JyxcbiAgICAgIHBhZGRpbmdSaWdodDogJzIwcHgnLFxuICAgICAgcGFkZGluZ1RvcDogJzEwcHgnLFxuICAgICAgcGFkZGluZ0JvdHRvbTogJzEwcHgnLFxuICAgICAgbWluV2lkdGg6ICcxMDBweCcsXG4gICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIHVzZXJTZWxlY3Q6ICdub25lJ1xuICAgIH1cbiAgfSxcbiAgY29tcG9uZW50OiB7XG4gICAgbmFtZTogJ1RleHQnLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHRleHQ6ICdOZXcgdGFiJ1xuICAgIH1cbiAgfVxufTtcbmNvbnN0IGRlZmF1bHRFbGVtZW50ID0ge1xuICAnQHR5cGUnOiAnQGJ1aWxkZXIuaW8vc2RrOkVsZW1lbnQnLFxuICByZXNwb25zaXZlU3R5bGVzOiB7XG4gICAgbGFyZ2U6IHtcbiAgICAgIGhlaWdodDogJzIwMHB4JyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIG1hcmdpblRvcDogJzIwcHgnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbidcbiAgICB9XG4gIH0sXG4gIGNvbXBvbmVudDoge1xuICAgIG5hbWU6ICdUZXh0JyxcbiAgICBvcHRpb25zOiB7XG4gICAgICB0ZXh0OiAnTmV3IHRhYiBjb250ZW50ICdcbiAgICB9XG4gIH1cbn07XG5leHBvcnQgY29uc3QgY29tcG9uZW50SW5mbzogQ29tcG9uZW50SW5mbyA9IHtcbiAgbmFtZTogJ0J1aWxkZXI6IFRhYnMnLFxuICBpbnB1dHM6IFt7XG4gICAgbmFtZTogJ3RhYnMnLFxuICAgIHR5cGU6ICdsaXN0JyxcbiAgICBicm9hZGNhc3Q6IHRydWUsXG4gICAgc3ViRmllbGRzOiBbe1xuICAgICAgbmFtZTogJ2xhYmVsJyxcbiAgICAgIHR5cGU6ICd1aUJsb2NrcycsXG4gICAgICBoaWRlRnJvbVVJOiB0cnVlLFxuICAgICAgZGVmYXVsdFZhbHVlOiBbZGVmYXVsdFRhYl1cbiAgICB9LCB7XG4gICAgICBuYW1lOiAnY29udGVudCcsXG4gICAgICB0eXBlOiAndWlCbG9ja3MnLFxuICAgICAgaGlkZUZyb21VSTogdHJ1ZSxcbiAgICAgIGRlZmF1bHRWYWx1ZTogW2RlZmF1bHRFbGVtZW50XVxuICAgIH1dLFxuICAgIGRlZmF1bHRWYWx1ZTogW3tcbiAgICAgIGxhYmVsOiBbe1xuICAgICAgICAuLi5kZWZhdWx0VGFiLFxuICAgICAgICBjb21wb25lbnQ6IHtcbiAgICAgICAgICBuYW1lOiAnVGV4dCcsXG4gICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgdGV4dDogJ1RhYiAxJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfV0sXG4gICAgICBjb250ZW50OiBbe1xuICAgICAgICAuLi5kZWZhdWx0RWxlbWVudCxcbiAgICAgICAgY29tcG9uZW50OiB7XG4gICAgICAgICAgbmFtZTogJ1RleHQnLFxuICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIHRleHQ6ICdUYWIgMSBjb250ZW50J1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfV1cbiAgICB9LCB7XG4gICAgICBsYWJlbDogW3tcbiAgICAgICAgLi4uZGVmYXVsdFRhYixcbiAgICAgICAgY29tcG9uZW50OiB7XG4gICAgICAgICAgbmFtZTogJ1RleHQnLFxuICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIHRleHQ6ICdUYWIgMidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgY29udGVudDogW3tcbiAgICAgICAgLi4uZGVmYXVsdEVsZW1lbnQsXG4gICAgICAgIGNvbXBvbmVudDoge1xuICAgICAgICAgIG5hbWU6ICdUZXh0JyxcbiAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICB0ZXh0OiAnVGFiIDIgY29udGVudCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1dXG4gICAgfV1cbiAgfSwge1xuICAgIG5hbWU6ICdhY3RpdmVUYWJTdHlsZScsXG4gICAgdHlwZTogJ3VpU3R5bGUnLFxuICAgIGhlbHBlclRleHQ6ICdDU1Mgc3R5bGVzIGZvciB0aGUgYWN0aXZlIHRhYicsXG4gICAgZGVmYXVsdFZhbHVlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuMSknXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogJ2RlZmF1bHRBY3RpdmVUYWInLFxuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIGhlbHBlclRleHQ6ICdEZWZhdWx0IHRhYiB0byBvcGVuIHRvLiBTZXQgdG8gXCIxXCIgZm9yIHRoZSBmaXJzdCB0YWIsIFwiMlwiIGZvciB0aGUgc2Vjb25kLCBvciBjaG9vc2UgXCIwXCIgZm9yIG5vbmUnLFxuICAgIGRlZmF1bHRWYWx1ZTogMSxcbiAgICBhZHZhbmNlZDogdHJ1ZVxuICB9LCB7XG4gICAgbmFtZTogJ2NvbGxhcHNpYmxlJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgaGVscGVyVGV4dDogJ0lmIG9uLCBjbGlja2luZyBhbiBvcGVuIHRhYiBjbG9zZXMgaXQgc28gbm8gdGFicyBhcmUgYWN0aXZlJyxcbiAgICBkZWZhdWx0VmFsdWU6IGZhbHNlLFxuICAgIGFkdmFuY2VkOiB0cnVlXG4gIH0sIHtcbiAgICBuYW1lOiAndGFiSGVhZGVyTGF5b3V0JyxcbiAgICB0eXBlOiAnZW51bScsXG4gICAgaGVscGVyVGV4dDogJ0NoYW5nZSB0aGUgbGF5b3V0IG9mIHRoZSB0YWIgaGVhZGVycyAodXNlcyBqdXN0aWZ5LWNvbnRlbnQpJyxcbiAgICBkZWZhdWx0VmFsdWU6ICdmbGV4LXN0YXJ0JyxcbiAgICBlbnVtOiBbe1xuICAgICAgbGFiZWw6ICdDZW50ZXInLFxuICAgICAgdmFsdWU6ICdjZW50ZXInXG4gICAgfSwge1xuICAgICAgbGFiZWw6ICdTcGFjZSBiZXR3ZWVuJyxcbiAgICAgIHZhbHVlOiAnc3BhY2UtYmV0d2VlbidcbiAgICB9LCB7XG4gICAgICBsYWJlbDogJ1NwYWNlIGFyb3VuZCcsXG4gICAgICB2YWx1ZTogJ3NwYWNlLWFyb3VuZCdcbiAgICB9LCB7XG4gICAgICBsYWJlbDogJ0xlZnQnLFxuICAgICAgdmFsdWU6ICdmbGV4LXN0YXJ0J1xuICAgIH0sIHtcbiAgICAgIGxhYmVsOiAnUmlnaHQnLFxuICAgICAgdmFsdWU6ICdmbGV4LWVuZCdcbiAgICB9XVxuICB9XSxcbiAgc2hvdWxkUmVjZWl2ZUJ1aWxkZXJQcm9wczoge1xuICAgIGJ1aWxkZXJCbG9jazogdHJ1ZSxcbiAgICBidWlsZGVyQ29udGV4dDogdHJ1ZSxcbiAgICBidWlsZGVyQ29tcG9uZW50czogdHJ1ZSxcbiAgICBidWlsZGVyTGlua0NvbXBvbmVudDogdHJ1ZVxuICB9XG59Il19