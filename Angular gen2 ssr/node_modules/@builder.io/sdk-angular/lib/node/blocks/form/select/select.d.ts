import { ElementRef, Renderer2, SimpleChanges } from "@angular/core";
import * as i0 from "@angular/core";
/**
 * This import is used by the Svelte SDK. Do not remove.
 */
export interface FormSelectProps {
    options?: {
        name?: string;
        value: string;
    }[];
    attributes?: any;
    name?: string;
    value?: string;
    defaultValue?: string;
    required?: boolean;
}
export default class SelectComponent {
    private renderer;
    defaultValue: FormSelectProps["defaultValue"];
    attributes: FormSelectProps["attributes"];
    value: FormSelectProps["value"];
    name: FormSelectProps["name"];
    required: FormSelectProps["required"];
    options: FormSelectProps["options"];
    elRef0: ElementRef;
    _listenerFns: Map<string, () => void>;
    node_0_select: any;
    elRef0_state_0: any;
    setAttributes(el: HTMLElement, value: any, changes?: any): void;
    trackByOption0(index: any, option: any): string;
    constructor(renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelectComponent, "select-component", never, { "defaultValue": { "alias": "defaultValue"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; "value": { "alias": "value"; "required": false; }; "name": { "alias": "name"; "required": false; }; "required": { "alias": "required"; "required": false; }; "options": { "alias": "options"; "required": false; }; }, {}, never, never, true, never>;
}
