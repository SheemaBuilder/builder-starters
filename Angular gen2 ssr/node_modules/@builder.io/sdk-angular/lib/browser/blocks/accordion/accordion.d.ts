import type { Dictionary } from "../../types/typescript";
import type { AccordionProps } from "./accordion.types";
import * as i0 from "@angular/core";
export default class Accordion {
    grid: AccordionProps["grid"];
    oneAtATime: AccordionProps["oneAtATime"];
    gridRowWidth: AccordionProps["gridRowWidth"];
    items: AccordionProps["items"];
    builderBlock: AccordionProps["builderBlock"];
    builderContext: AccordionProps["builderContext"];
    builderComponents: AccordionProps["builderComponents"];
    builderLinkComponent: AccordionProps["builderLinkComponent"];
    open: any[];
    get onlyOneAtATime(): boolean;
    get accordionStyles(): {
        flexDirection: "row" | "column-reverse" | "column" | "row-reverse";
        alignItems: "center" | "stretch" | "flex-start" | "flex-end" | "baseline";
        flexWrap: "wrap" | "nowrap";
        display: "flex" | "none";
    };
    get accordionTitleStyles(): Dictionary<string>;
    getAccordionTitleClassName(index: number): string;
    getAccordionDetailClassName(index: number): string;
    get openGridItemOrder(): number;
    get accordionDetailStyles(): Dictionary<string>;
    onClick(index: number): void;
    node_0_div: (item: any, index: any) => string;
    node_1_div: (item: any, index: any) => any;
    node_3_Blocks: (item: any, index: any) => string;
    node_4_Show: (item: any, index: any) => boolean;
    node_5_div: (item: any, index: any) => string;
    node_6_Blocks: (item: any, index: any) => string;
    trackByItem0(index: any, item: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<Accordion, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Accordion, "accordion", never, { "grid": { "alias": "grid"; "required": false; }; "oneAtATime": { "alias": "oneAtATime"; "required": false; }; "gridRowWidth": { "alias": "gridRowWidth"; "required": false; }; "items": { "alias": "items"; "required": false; }; "builderBlock": { "alias": "builderBlock"; "required": false; }; "builderContext": { "alias": "builderContext"; "required": false; }; "builderComponents": { "alias": "builderComponents"; "required": false; }; "builderLinkComponent": { "alias": "builderLinkComponent"; "required": false; }; }, {}, never, never, true, never>;
}
