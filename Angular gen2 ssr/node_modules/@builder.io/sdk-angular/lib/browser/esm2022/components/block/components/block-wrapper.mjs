import { Component, Input } from "@angular/core";
import { CommonModule } from "@angular/common";
import { getBlockActions } from "../../../functions/get-block-actions";
import { getBlockProperties } from "../../../functions/get-block-properties";
import DynamicRenderer from "../../dynamic-renderer/dynamic-renderer";
import * as i0 from "@angular/core";
export default class BlockWrapper {
    constructor() {
        this.node_0_DynamicRenderer = null;
        this.node_1_DynamicRenderer = null;
    }
    ngOnInit() {
        this.node_0_DynamicRenderer = getBlockProperties({
            block: this.block,
            context: this.context,
        });
        this.node_1_DynamicRenderer = getBlockActions({
            block: this.block,
            rootState: this.context.rootState,
            rootSetState: this.context.rootSetState,
            localState: this.context.localState,
            context: this.context.context,
            stripPrefix: true,
        });
    }
    ngOnChanges(changes) {
        if (typeof window !== "undefined") {
            this.node_0_DynamicRenderer = getBlockProperties({
                block: this.block,
                context: this.context,
            });
            this.node_1_DynamicRenderer = getBlockActions({
                block: this.block,
                rootState: this.context.rootState,
                rootSetState: this.context.rootSetState,
                localState: this.context.localState,
                context: this.context.context,
                stripPrefix: true,
            });
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BlockWrapper, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: BlockWrapper, isStandalone: true, selector: "block-wrapper", inputs: { block: "block", context: "context", Wrapper: "Wrapper" }, usesOnChanges: true, ngImport: i0, template: `
    <dynamic-renderer
      [TagName]="Wrapper"
      [attributes]="node_0_DynamicRenderer"
      [actionAttributes]="node_1_DynamicRenderer"
    >
      <ng-content></ng-content>
    </dynamic-renderer>
  `, isInline: true, styles: [":host{display:contents}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "component", type: DynamicRenderer, selector: "dynamic-renderer, DynamicRenderer", inputs: ["TagName", "attributes", "actionAttributes"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BlockWrapper, decorators: [{
            type: Component,
            args: [{ selector: "block-wrapper", template: `
    <dynamic-renderer
      [TagName]="Wrapper"
      [attributes]="node_0_DynamicRenderer"
      [actionAttributes]="node_1_DynamicRenderer"
    >
      <ng-content></ng-content>
    </dynamic-renderer>
  `, standalone: true, imports: [CommonModule, DynamicRenderer], styles: [":host{display:contents}\n"] }]
        }], propDecorators: { block: [{
                type: Input
            }], context: [{
                type: Input
            }], Wrapper: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2std3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2Jsb2NrL2NvbXBvbmVudHMvYmxvY2std3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDaEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBYy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUU3RSxPQUFPLGVBQWUsTUFBTSx5Q0FBeUMsQ0FBQzs7QUF1QnRFLE1BQU0sQ0FBQyxPQUFPLE9BQU8sWUFBWTtJQXJCakM7UUEwQkUsMkJBQXNCLEdBQUcsSUFBSSxDQUFDO1FBQzlCLDJCQUFzQixHQUFHLElBQUksQ0FBQztLQWlDL0I7SUEvQkMsUUFBUTtRQUNOLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxrQkFBa0IsQ0FBQztZQUMvQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxzQkFBc0IsR0FBRyxlQUFlLENBQUM7WUFDNUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVM7WUFDakMsWUFBWSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWTtZQUN2QyxVQUFVLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVO1lBQ25DLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU87WUFDN0IsV0FBVyxFQUFFLElBQUk7U0FDbEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtZQUNqQyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsa0JBQWtCLENBQUM7Z0JBQy9DLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO2FBQ3RCLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxzQkFBc0IsR0FBRyxlQUFlLENBQUM7Z0JBQzVDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUztnQkFDakMsWUFBWSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWTtnQkFDdkMsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVTtnQkFDbkMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTztnQkFDN0IsV0FBVyxFQUFFLElBQUk7YUFDbEIsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDOytHQXRDa0IsWUFBWTttR0FBWixZQUFZLGtLQW5CckI7Ozs7Ozs7O0dBUVQsa0dBU1MsWUFBWSwrQkFBRSxlQUFlOzs0RkFFcEIsWUFBWTtrQkFyQmhDLFNBQVM7K0JBQ0UsZUFBZSxZQUNmOzs7Ozs7OztHQVFULGNBUVcsSUFBSSxXQUNQLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQzs4QkFHL0IsS0FBSztzQkFBYixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcblxudHlwZSBCbG9ja1dyYXBwZXJQcm9wcyA9IHtcbiAgV3JhcHBlcjogc3RyaW5nO1xuICBibG9jazogQnVpbGRlckJsb2NrO1xuICBjb250ZXh0OiBCdWlsZGVyQ29udGV4dEludGVyZmFjZTtcbiAgY2hpbGRyZW4/OiBhbnk7XG59O1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IHJlbmRlcnMgYSBibG9jaydzIHdyYXBwZXIgSFRNTCBlbGVtZW50IChmcm9tIHRoZSBibG9jaydzIGB0YWdOYW1lYCBwcm9wZXJ0eSkuXG4gKi9cblxuaW1wb3J0IHR5cGUgeyBCdWlsZGVyQ29udGV4dEludGVyZmFjZSB9IGZyb20gXCIuLi8uLi8uLi9jb250ZXh0L3R5cGVzXCI7XG5pbXBvcnQgeyBnZXRCbG9ja0FjdGlvbnMgfSBmcm9tIFwiLi4vLi4vLi4vZnVuY3Rpb25zL2dldC1ibG9jay1hY3Rpb25zXCI7XG5pbXBvcnQgeyBnZXRCbG9ja1Byb3BlcnRpZXMgfSBmcm9tIFwiLi4vLi4vLi4vZnVuY3Rpb25zL2dldC1ibG9jay1wcm9wZXJ0aWVzXCI7XG5pbXBvcnQgdHlwZSB7IEJ1aWxkZXJCbG9jayB9IGZyb20gXCIuLi8uLi8uLi90eXBlcy9idWlsZGVyLWJsb2NrXCI7XG5pbXBvcnQgRHluYW1pY1JlbmRlcmVyIGZyb20gXCIuLi8uLi9keW5hbWljLXJlbmRlcmVyL2R5bmFtaWMtcmVuZGVyZXJcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcImJsb2NrLXdyYXBwZXJcIixcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZHluYW1pYy1yZW5kZXJlclxuICAgICAgW1RhZ05hbWVdPVwiV3JhcHBlclwiXG4gICAgICBbYXR0cmlidXRlc109XCJub2RlXzBfRHluYW1pY1JlbmRlcmVyXCJcbiAgICAgIFthY3Rpb25BdHRyaWJ1dGVzXT1cIm5vZGVfMV9EeW5hbWljUmVuZGVyZXJcIlxuICAgID5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2R5bmFtaWMtcmVuZGVyZXI+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAgIDpob3N0IHtcbiAgICAgICAgZGlzcGxheTogY29udGVudHM7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRHluYW1pY1JlbmRlcmVyXSxcbn0pXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCbG9ja1dyYXBwZXIge1xuICBASW5wdXQoKSBibG9jayE6IEJsb2NrV3JhcHBlclByb3BzW1wiYmxvY2tcIl07XG4gIEBJbnB1dCgpIGNvbnRleHQhOiBCbG9ja1dyYXBwZXJQcm9wc1tcImNvbnRleHRcIl07XG4gIEBJbnB1dCgpIFdyYXBwZXIhOiBCbG9ja1dyYXBwZXJQcm9wc1tcIldyYXBwZXJcIl07XG5cbiAgbm9kZV8wX0R5bmFtaWNSZW5kZXJlciA9IG51bGw7XG4gIG5vZGVfMV9EeW5hbWljUmVuZGVyZXIgPSBudWxsO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubm9kZV8wX0R5bmFtaWNSZW5kZXJlciA9IGdldEJsb2NrUHJvcGVydGllcyh7XG4gICAgICBibG9jazogdGhpcy5ibG9jayxcbiAgICAgIGNvbnRleHQ6IHRoaXMuY29udGV4dCxcbiAgICB9KTtcbiAgICB0aGlzLm5vZGVfMV9EeW5hbWljUmVuZGVyZXIgPSBnZXRCbG9ja0FjdGlvbnMoe1xuICAgICAgYmxvY2s6IHRoaXMuYmxvY2ssXG4gICAgICByb290U3RhdGU6IHRoaXMuY29udGV4dC5yb290U3RhdGUsXG4gICAgICByb290U2V0U3RhdGU6IHRoaXMuY29udGV4dC5yb290U2V0U3RhdGUsXG4gICAgICBsb2NhbFN0YXRlOiB0aGlzLmNvbnRleHQubG9jYWxTdGF0ZSxcbiAgICAgIGNvbnRleHQ6IHRoaXMuY29udGV4dC5jb250ZXh0LFxuICAgICAgc3RyaXBQcmVmaXg6IHRydWUsXG4gICAgfSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRoaXMubm9kZV8wX0R5bmFtaWNSZW5kZXJlciA9IGdldEJsb2NrUHJvcGVydGllcyh7XG4gICAgICAgIGJsb2NrOiB0aGlzLmJsb2NrLFxuICAgICAgICBjb250ZXh0OiB0aGlzLmNvbnRleHQsXG4gICAgICB9KTtcbiAgICAgIHRoaXMubm9kZV8xX0R5bmFtaWNSZW5kZXJlciA9IGdldEJsb2NrQWN0aW9ucyh7XG4gICAgICAgIGJsb2NrOiB0aGlzLmJsb2NrLFxuICAgICAgICByb290U3RhdGU6IHRoaXMuY29udGV4dC5yb290U3RhdGUsXG4gICAgICAgIHJvb3RTZXRTdGF0ZTogdGhpcy5jb250ZXh0LnJvb3RTZXRTdGF0ZSxcbiAgICAgICAgbG9jYWxTdGF0ZTogdGhpcy5jb250ZXh0LmxvY2FsU3RhdGUsXG4gICAgICAgIGNvbnRleHQ6IHRoaXMuY29udGV4dC5jb250ZXh0LFxuICAgICAgICBzdHJpcFByZWZpeDogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIl19