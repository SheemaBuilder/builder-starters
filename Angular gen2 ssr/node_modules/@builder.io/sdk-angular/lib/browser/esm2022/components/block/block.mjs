import { Component, Input } from "@angular/core";
import { CommonModule } from "@angular/common";
import { TARGET } from "../../constants/target";
import { getBlockComponentOptions } from "../../functions/get-block-component-options";
import { getProcessedBlock } from "../../functions/get-processed-block";
import DynamicDiv from "../dynamic-div";
import { bindAnimations } from "./animator";
import { getComponent, getRepeatItemData, provideBuilderBlock, provideBuilderContext, provideLinkComponent, provideRegisteredComponents, } from "./block.helpers";
import BlockStyles from "./components/block-styles";
import BlockWrapper from "./components/block-wrapper";
import ComponentRef from "./components/component-ref/component-ref";
import RepeatedBlock from "./components/repeated-block";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export default class Block {
    constructor() {
        this._processedBlock = {
            value: null,
            update: false,
        };
    }
    get repeatItem() {
        return getRepeatItemData({
            block: this.block,
            context: this.context,
        });
    }
    get processedBlock() {
        const blockToUse = this.block.repeat?.collection
            ? this.block
            : getProcessedBlock({
                block: this.block,
                localState: this.context.localState,
                rootState: this.context.rootState,
                rootSetState: this.context.rootSetState,
                context: this.context.context,
            });
        return blockToUse;
    }
    get blockComponent() {
        return getComponent({
            block: this.processedBlock,
            registeredComponents: this.registeredComponents,
            model: this.context.model,
        });
    }
    get Tag() {
        const shouldUseLink = this.block.tagName === "a" ||
            this.processedBlock.properties?.href ||
            this.processedBlock.href;
        if (shouldUseLink) {
            return this.linkComponent || "a";
        }
        return DynamicDiv;
    }
    get canShowBlock() {
        if (this.block.repeat?.collection) {
            if (this.repeatItem?.length)
                return true;
            return false;
        }
        const shouldHide = "hide" in this.processedBlock ? this.processedBlock.hide : false;
        const shouldShow = "show" in this.processedBlock ? this.processedBlock.show : true;
        return shouldShow && !shouldHide;
    }
    get childrenWithoutParentComponent() {
        /**
         * When there is no `componentRef`, there might still be children that need to be rendered. In this case,
         * we render them outside of `componentRef`.
         * NOTE: We make sure not to render this if `repeatItemData` is non-null, because that means we are rendering an array of
         * blocks, and the children will be repeated within those blocks.
         */
        const shouldRenderChildrenOutsideRef = !this.blockComponent?.component && !this.repeatItem;
        return shouldRenderChildrenOutsideRef
            ? this.processedBlock.children ?? []
            : [];
    }
    get componentRefProps() {
        return {
            blockChildren: this.processedBlock.children ?? [],
            componentRef: this.blockComponent?.component,
            componentOptions: {
                ...getBlockComponentOptions(this.processedBlock, this.context),
                ...provideBuilderBlock(this.blockComponent, this.processedBlock),
                ...provideBuilderContext(this.blockComponent, this.context),
                ...provideLinkComponent(this.blockComponent, this.linkComponent),
                ...provideRegisteredComponents(this.blockComponent, this.registeredComponents, this.context.model),
            },
            context: this.context,
            linkComponent: this.linkComponent,
            registeredComponents: this.registeredComponents,
            builderBlock: this.processedBlock,
            includeBlockProps: this.blockComponent?.noWrap === true,
            isInteractive: !(this.blockComponent?.isRSC && TARGET === "rsc"),
        };
    }
    trackByChild0(_, child) {
        return child.id;
    }
    trackByData1(index, data) {
        return index;
    }
    trackByData2(index, data) {
        return index;
    }
    ngOnInit() {
        if (typeof window !== "undefined") {
            const blockId = this.processedBlock.id;
            const animations = this.processedBlock.animations;
            if (animations && blockId) {
                // in Angular, the DynamicDiv sets attributes (builder-id) on the element late (ngAfterViewInit)
                // so we need to wait for them to be attached to the DOM before calling this else we'll not find the element
                requestAnimationFrame(() => {
                    bindAnimations(animations.map((animation) => ({
                        ...animation,
                        elementId: blockId,
                    })));
                });
            }
        }
    }
    ngOnChanges(changes) {
        if (typeof window !== "undefined") {
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Block, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: Block, isStandalone: true, selector: "block", inputs: { block: "block", context: "context", registeredComponents: "registeredComponents", linkComponent: "linkComponent" }, usesOnChanges: true, ngImport: i0, template: `
    <ng-container *ngIf="canShowBlock">
      <block-styles [block]="processedBlock" [context]="context"></block-styles>
      <ng-container *ngIf="!blockComponent?.noWrap">
        <ng-container *ngIf="!repeatItem">
          <block-wrapper
            [Wrapper]="Tag"
            [block]="processedBlock"
            [context]="context"
          >
            <component-ref
              [componentRef]="componentRefProps.componentRef"
              [componentOptions]="componentRefProps.componentOptions"
              [blockChildren]="componentRefProps.blockChildren"
              [context]="componentRefProps.context"
              [registeredComponents]="componentRefProps.registeredComponents"
              [linkComponent]="componentRefProps.linkComponent"
              [builderBlock]="componentRefProps.builderBlock"
              [includeBlockProps]="componentRefProps.includeBlockProps"
              [isInteractive]="componentRefProps.isInteractive"
            ></component-ref>
            <ng-container
              *ngFor="let child of childrenWithoutParentComponent; trackBy: trackByChild0"
            >
              <block
                [block]="child"
                [registeredComponents]="registeredComponents"
                [linkComponent]="linkComponent"
                [context]="context"
              ></block>
            </ng-container>
          </block-wrapper>
        </ng-container>
        <ng-container *ngIf="!(!repeatItem)">
          <ng-container
            *ngFor="let data of repeatItem; index as index; trackBy: trackByData1"
          >
            <repeated-block
              [repeatContext]="data.context"
              [block]="data.block"
              [registeredComponents]="registeredComponents"
              [linkComponent]="linkComponent"
            ></repeated-block>
          </ng-container>
        </ng-container>
      </ng-container>
      <ng-container *ngIf="!(!blockComponent?.noWrap)">
        <ng-container *ngIf="!repeatItem">
          <component-ref
            [componentRef]="componentRefProps.componentRef"
            [componentOptions]="componentRefProps.componentOptions"
            [blockChildren]="componentRefProps.blockChildren"
            [context]="componentRefProps.context"
            [registeredComponents]="componentRefProps.registeredComponents"
            [linkComponent]="componentRefProps.linkComponent"
            [builderBlock]="componentRefProps.builderBlock"
            [includeBlockProps]="componentRefProps.includeBlockProps"
            [isInteractive]="componentRefProps.isInteractive"
          ></component-ref>
        </ng-container>
        <ng-container *ngIf="!(!repeatItem)">
          <ng-container
            *ngFor="let data of repeatItem; index as index; trackBy: trackByData2"
          >
            <repeated-block
              [repeatContext]="data.context"
              [block]="data.block"
              [registeredComponents]="registeredComponents"
              [linkComponent]="linkComponent"
            ></repeated-block>
          </ng-container>
        </ng-container>
      </ng-container>
    </ng-container>
  `, isInline: true, styles: [":host{display:contents}\n"], dependencies: [{ kind: "component", type: Block, selector: "block", inputs: ["block", "context", "registeredComponents", "linkComponent"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: BlockStyles, selector: "block-styles", inputs: ["block", "context"] }, { kind: "component", type: RepeatedBlock, selector: "repeated-block", inputs: ["repeatContext", "block", "registeredComponents", "linkComponent"] }, { kind: "component", type: ComponentRef, selector: "component-ref", inputs: ["componentOptions", "builderBlock", "context", "componentRef", "linkComponent", "includeBlockProps", "isInteractive", "blockChildren", "registeredComponents"] }, { kind: "component", type: BlockWrapper, selector: "block-wrapper", inputs: ["block", "context", "Wrapper"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Block, decorators: [{
            type: Component,
            args: [{ selector: "block", template: `
    <ng-container *ngIf="canShowBlock">
      <block-styles [block]="processedBlock" [context]="context"></block-styles>
      <ng-container *ngIf="!blockComponent?.noWrap">
        <ng-container *ngIf="!repeatItem">
          <block-wrapper
            [Wrapper]="Tag"
            [block]="processedBlock"
            [context]="context"
          >
            <component-ref
              [componentRef]="componentRefProps.componentRef"
              [componentOptions]="componentRefProps.componentOptions"
              [blockChildren]="componentRefProps.blockChildren"
              [context]="componentRefProps.context"
              [registeredComponents]="componentRefProps.registeredComponents"
              [linkComponent]="componentRefProps.linkComponent"
              [builderBlock]="componentRefProps.builderBlock"
              [includeBlockProps]="componentRefProps.includeBlockProps"
              [isInteractive]="componentRefProps.isInteractive"
            ></component-ref>
            <ng-container
              *ngFor="let child of childrenWithoutParentComponent; trackBy: trackByChild0"
            >
              <block
                [block]="child"
                [registeredComponents]="registeredComponents"
                [linkComponent]="linkComponent"
                [context]="context"
              ></block>
            </ng-container>
          </block-wrapper>
        </ng-container>
        <ng-container *ngIf="!(!repeatItem)">
          <ng-container
            *ngFor="let data of repeatItem; index as index; trackBy: trackByData1"
          >
            <repeated-block
              [repeatContext]="data.context"
              [block]="data.block"
              [registeredComponents]="registeredComponents"
              [linkComponent]="linkComponent"
            ></repeated-block>
          </ng-container>
        </ng-container>
      </ng-container>
      <ng-container *ngIf="!(!blockComponent?.noWrap)">
        <ng-container *ngIf="!repeatItem">
          <component-ref
            [componentRef]="componentRefProps.componentRef"
            [componentOptions]="componentRefProps.componentOptions"
            [blockChildren]="componentRefProps.blockChildren"
            [context]="componentRefProps.context"
            [registeredComponents]="componentRefProps.registeredComponents"
            [linkComponent]="componentRefProps.linkComponent"
            [builderBlock]="componentRefProps.builderBlock"
            [includeBlockProps]="componentRefProps.includeBlockProps"
            [isInteractive]="componentRefProps.isInteractive"
          ></component-ref>
        </ng-container>
        <ng-container *ngIf="!(!repeatItem)">
          <ng-container
            *ngFor="let data of repeatItem; index as index; trackBy: trackByData2"
          >
            <repeated-block
              [repeatContext]="data.context"
              [block]="data.block"
              [registeredComponents]="registeredComponents"
              [linkComponent]="linkComponent"
            ></repeated-block>
          </ng-container>
        </ng-container>
      </ng-container>
    </ng-container>
  `, standalone: true, imports: [
                        CommonModule,
                        BlockStyles,
                        RepeatedBlock,
                        ComponentRef,
                        BlockWrapper,
                        Block,
                    ], styles: [":host{display:contents}\n"] }]
        }], propDecorators: { block: [{
                type: Input
            }], context: [{
                type: Input
            }], registeredComponents: [{
                type: Input
            }], linkComponent: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,