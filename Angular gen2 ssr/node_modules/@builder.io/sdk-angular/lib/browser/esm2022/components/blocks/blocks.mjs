import { Component, Input } from "@angular/core";
import { CommonModule } from "@angular/common";
import BuilderContext from "../../context/builder.context";
import ComponentsContext from "../../context/components.context";
import Block from "../block/block";
import BlocksWrapper from "./blocks-wrapper";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export default class Blocks {
    trackByBlock0(_, block) {
        return block.id;
    }
    constructor(builderContext, componentsContext) {
        this.builderContext = builderContext;
        this.componentsContext = componentsContext;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Blocks, deps: [{ token: BuilderContext }, { token: ComponentsContext }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: Blocks, isStandalone: true, selector: "blocks", inputs: { blocks: "blocks", parent: "parent", path: "path", styleProp: "styleProp", className: "className", context: "context", linkComponent: "linkComponent", registeredComponents: "registeredComponents" }, ngImport: i0, template: `
    <blocks-wrapper
      [blocks]="blocks"
      [parent]="parent"
      [path]="path"
      [styleProp]="styleProp"
      [classNameProp]="className"
      [BlocksWrapper]="context?.BlocksWrapper || builderContext?.BlocksWrapper"
      [BlocksWrapperProps]="context?.BlocksWrapperProps || builderContext?.BlocksWrapperProps"
    >
      <ng-container *ngIf="blocks">
        <ng-container *ngFor="let block of blocks; trackBy: trackByBlock0">
          <block
            [block]="block"
            [linkComponent]="linkComponent"
            [context]="context || builderContext"
            [registeredComponents]="registeredComponents || componentsContext?.registeredComponents"
          ></block>
        </ng-container>
      </ng-container>
    </blocks-wrapper>
  `, isInline: true, styles: [":host{display:contents}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: BlocksWrapper, selector: "blocks-wrapper", inputs: ["blocks", "classNameProp", "path", "parent", "styleProp", "BlocksWrapperProps", "BlocksWrapper"] }, { kind: "component", type: Block, selector: "block", inputs: ["block", "context", "registeredComponents", "linkComponent"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Blocks, decorators: [{
            type: Component,
            args: [{ selector: "blocks", template: `
    <blocks-wrapper
      [blocks]="blocks"
      [parent]="parent"
      [path]="path"
      [styleProp]="styleProp"
      [classNameProp]="className"
      [BlocksWrapper]="context?.BlocksWrapper || builderContext?.BlocksWrapper"
      [BlocksWrapperProps]="context?.BlocksWrapperProps || builderContext?.BlocksWrapperProps"
    >
      <ng-container *ngIf="blocks">
        <ng-container *ngFor="let block of blocks; trackBy: trackByBlock0">
          <block
            [block]="block"
            [linkComponent]="linkComponent"
            [context]="context || builderContext"
            [registeredComponents]="registeredComponents || componentsContext?.registeredComponents"
          ></block>
        </ng-container>
      </ng-container>
    </blocks-wrapper>
  `, standalone: true, imports: [CommonModule, BlocksWrapper, Block], styles: [":host{display:contents}\n"] }]
        }], ctorParameters: function () { return [{ type: BuilderContext }, { type: ComponentsContext }]; }, propDecorators: { blocks: [{
                type: Input
            }], parent: [{
                type: Input
            }], path: [{
                type: Input
            }], styleProp: [{
                type: Input
            }], className: [{
                type: Input
            }], context: [{
                type: Input
            }], linkComponent: [{
                type: Input
            }], registeredComponents: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2tzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvYmxvY2tzL2Jsb2Nrcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxjQUFjLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsT0FBTyxpQkFBaUIsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEtBQUssTUFBTSxnQkFBZ0IsQ0FBQztBQUNuQyxPQUFPLGFBQWEsTUFBTSxrQkFBa0IsQ0FBQzs7O0FBcUM3QyxNQUFNLENBQUMsT0FBTyxPQUFPLE1BQU07SUFVekIsYUFBYSxDQUFDLENBQUMsRUFBRSxLQUFLO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRUQsWUFDUyxjQUE4QixFQUM5QixpQkFBb0M7UUFEcEMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7SUFDMUMsQ0FBQzsrR0FqQmUsTUFBTSxrQkF4Q3BCLGNBQWMsYUFDZCxpQkFBaUI7bUdBdUNILE1BQU0sa1JBaENmOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FxQlQsa0dBU1MsWUFBWSxnUUFBRSxhQUFhLHNLQUFFLEtBQUs7OzRGQUV6QixNQUFNO2tCQWxDMUIsU0FBUzsrQkFDRSxRQUFRLFlBQ1I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCVCxjQVFXLElBQUksV0FDUCxDQUFDLFlBQVksRUFBRSxhQUFhLEVBQUUsS0FBSyxDQUFDOzBEQXRDeEMsY0FBYyxZQUNkLGlCQUFpQiwwQkF3Q2IsTUFBTTtzQkFBZCxLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxhQUFhO3NCQUFyQixLQUFLO2dCQUNHLG9CQUFvQjtzQkFBNUIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuXG5pbXBvcnQgQnVpbGRlckNvbnRleHQgZnJvbSBcIi4uLy4uL2NvbnRleHQvYnVpbGRlci5jb250ZXh0XCI7XG5pbXBvcnQgQ29tcG9uZW50c0NvbnRleHQgZnJvbSBcIi4uLy4uL2NvbnRleHQvY29tcG9uZW50cy5jb250ZXh0XCI7XG5pbXBvcnQgQmxvY2sgZnJvbSBcIi4uL2Jsb2NrL2Jsb2NrXCI7XG5pbXBvcnQgQmxvY2tzV3JhcHBlciBmcm9tIFwiLi9ibG9ja3Mtd3JhcHBlclwiO1xuaW1wb3J0IHR5cGUgeyBCbG9ja3NQcm9wcyB9IGZyb20gXCIuL2Jsb2Nrcy50eXBlc1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwiYmxvY2tzXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGJsb2Nrcy13cmFwcGVyXG4gICAgICBbYmxvY2tzXT1cImJsb2Nrc1wiXG4gICAgICBbcGFyZW50XT1cInBhcmVudFwiXG4gICAgICBbcGF0aF09XCJwYXRoXCJcbiAgICAgIFtzdHlsZVByb3BdPVwic3R5bGVQcm9wXCJcbiAgICAgIFtjbGFzc05hbWVQcm9wXT1cImNsYXNzTmFtZVwiXG4gICAgICBbQmxvY2tzV3JhcHBlcl09XCJjb250ZXh0Py5CbG9ja3NXcmFwcGVyIHx8IGJ1aWxkZXJDb250ZXh0Py5CbG9ja3NXcmFwcGVyXCJcbiAgICAgIFtCbG9ja3NXcmFwcGVyUHJvcHNdPVwiY29udGV4dD8uQmxvY2tzV3JhcHBlclByb3BzIHx8IGJ1aWxkZXJDb250ZXh0Py5CbG9ja3NXcmFwcGVyUHJvcHNcIlxuICAgID5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJibG9ja3NcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgYmxvY2sgb2YgYmxvY2tzOyB0cmFja0J5OiB0cmFja0J5QmxvY2swXCI+XG4gICAgICAgICAgPGJsb2NrXG4gICAgICAgICAgICBbYmxvY2tdPVwiYmxvY2tcIlxuICAgICAgICAgICAgW2xpbmtDb21wb25lbnRdPVwibGlua0NvbXBvbmVudFwiXG4gICAgICAgICAgICBbY29udGV4dF09XCJjb250ZXh0IHx8IGJ1aWxkZXJDb250ZXh0XCJcbiAgICAgICAgICAgIFtyZWdpc3RlcmVkQ29tcG9uZW50c109XCJyZWdpc3RlcmVkQ29tcG9uZW50cyB8fCBjb21wb25lbnRzQ29udGV4dD8ucmVnaXN0ZXJlZENvbXBvbmVudHNcIlxuICAgICAgICAgID48L2Jsb2NrPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvYmxvY2tzLXdyYXBwZXI+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAgIDpob3N0IHtcbiAgICAgICAgZGlzcGxheTogY29udGVudHM7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQmxvY2tzV3JhcHBlciwgQmxvY2tdLFxufSlcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJsb2NrcyB7XG4gIEBJbnB1dCgpIGJsb2NrcyE6IEJsb2Nrc1Byb3BzW1wiYmxvY2tzXCJdO1xuICBASW5wdXQoKSBwYXJlbnQhOiBCbG9ja3NQcm9wc1tcInBhcmVudFwiXTtcbiAgQElucHV0KCkgcGF0aCE6IEJsb2Nrc1Byb3BzW1wicGF0aFwiXTtcbiAgQElucHV0KCkgc3R5bGVQcm9wITogQmxvY2tzUHJvcHNbXCJzdHlsZVByb3BcIl07XG4gIEBJbnB1dCgpIGNsYXNzTmFtZSE6IEJsb2Nrc1Byb3BzW1wiY2xhc3NOYW1lXCJdO1xuICBASW5wdXQoKSBjb250ZXh0ITogQmxvY2tzUHJvcHNbXCJjb250ZXh0XCJdO1xuICBASW5wdXQoKSBsaW5rQ29tcG9uZW50ITogQmxvY2tzUHJvcHNbXCJsaW5rQ29tcG9uZW50XCJdO1xuICBASW5wdXQoKSByZWdpc3RlcmVkQ29tcG9uZW50cyE6IEJsb2Nrc1Byb3BzW1wicmVnaXN0ZXJlZENvbXBvbmVudHNcIl07XG5cbiAgdHJhY2tCeUJsb2NrMChfLCBibG9jaykge1xuICAgIHJldHVybiBibG9jay5pZDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBidWlsZGVyQ29udGV4dDogQnVpbGRlckNvbnRleHQsXG4gICAgcHVibGljIGNvbXBvbmVudHNDb250ZXh0OiBDb21wb25lbnRzQ29udGV4dFxuICApIHt9XG59XG4iXX0=