import { Component, Input } from "@angular/core";
import { CommonModule } from "@angular/common";
import { getSrcSet } from "./image.helpers";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export default class BuilderImage {
    constructor() {
        this.node_0_img = null;
        this.node_1_img = null;
        this.node_2_Show = null;
        this.node_3_div = null;
    }
    get srcSetToUse() {
        const imageToUse = this.image || this.src;
        const url = imageToUse;
        if (!url ||
            // We can auto add srcset for cdn.builder.io and shopify
            // images, otherwise you can supply this prop manually
            !(typeof url === "string" &&
                (url.match(/builder\.io/) || url.match(/cdn\.shopify\.com/)))) {
            return this.srcset;
        }
        if (this.noWebp) {
            return undefined; // no need to add srcset to svg images
        }
        if (this.srcset && this.image?.includes("builder.io/api/v1/image")) {
            if (!this.srcset.includes(this.image.split("?")[0])) {
                console.debug("Removed given srcset");
                return getSrcSet(url);
            }
        }
        else if (this.image && !this.srcset) {
            return getSrcSet(url);
        }
        return getSrcSet(url);
    }
    get webpSrcSet() {
        if (this.srcSetToUse?.match(/builder\.io/) && !this.noWebp) {
            return this.srcSetToUse.replace(/\?/g, "?format=webp&");
        }
        else {
            return "";
        }
    }
    get aspectRatioCss() {
        const aspectRatioStyles = {
            position: "absolute",
            height: "100%",
            width: "100%",
            left: "0px",
            top: "0px",
        };
        const out = this.aspectRatio ? aspectRatioStyles : undefined;
        return out;
    }
    ngOnInit() {
        this.node_0_img = {
            objectPosition: this.backgroundPosition || "center",
            objectFit: this.backgroundSize || "cover",
            ...this.aspectRatioCss,
        };
        this.node_1_img =
            "builder-image" + (this.className ? " " + this.className : "");
        this.node_2_Show =
            this.aspectRatio &&
                !(this.builderBlock?.children?.length && this.fitContent);
        this.node_3_div = {
            paddingTop: this.aspectRatio * 100 + "%",
        };
    }
    ngOnChanges(changes) {
        if (typeof window !== "undefined") {
            this.node_0_img = {
                objectPosition: this.backgroundPosition || "center",
                objectFit: this.backgroundSize || "cover",
                ...this.aspectRatioCss,
            };
            this.node_1_img =
                "builder-image" + (this.className ? " " + this.className : "");
            this.node_2_Show =
                this.aspectRatio &&
                    !(this.builderBlock?.children?.length && this.fitContent);
            this.node_3_div = {
                paddingTop: this.aspectRatio * 100 + "%",
            };
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BuilderImage, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: BuilderImage, isStandalone: true, selector: "builder-image", inputs: { backgroundPosition: "backgroundPosition", backgroundSize: "backgroundSize", className: "className", aspectRatio: "aspectRatio", builderBlock: "builderBlock", fitContent: "fitContent", image: "image", src: "src", srcset: "srcset", noWebp: "noWebp", highPriority: "highPriority", altText: "altText", sizes: "sizes" }, usesOnChanges: true, ngImport: i0, template: `
    <ng-container>
      <picture>
        <ng-container *ngIf="webpSrcSet">
          <source type="image/webp" [attr.srcset]="webpSrcSet" />
        </ng-container>
        <img
          [attr.loading]="highPriority ? 'eager' : 'lazy'"
          [attr.fetchpriority]="highPriority ? 'high' : 'auto'"
          [attr.alt]="altText"
          [attr.role]="altText ? undefined : 'presentation'"
          [ngStyle]="node_0_img"
          [class]="node_1_img + ' img'"
          [attr.src]="image"
          [attr.srcset]="srcSetToUse"
          [attr.sizes]="sizes"
        />
      </picture>
      <ng-container *ngIf="node_2_Show">
        <div class="builder-image-sizer div" [ngStyle]="node_3_div"></div>
      </ng-container>
      <ng-container *ngIf="builderBlock?.children?.length && fitContent">
        <ng-content></ng-content>
      </ng-container>
      <ng-container *ngIf="!fitContent && builderBlock?.children?.length">
        <div class="div-2"><ng-content></ng-content></div>
      </ng-container>
    </ng-container>
  `, isInline: true, styles: [":host{display:contents}.img{opacity:1;transition:opacity .2s ease-in-out}.div{width:100%;pointer-events:none;font-size:0}.div-2{display:flex;flex-direction:column;align-items:stretch;position:absolute;top:0;left:0;width:100%;height:100%}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BuilderImage, decorators: [{
            type: Component,
            args: [{ selector: "builder-image", template: `
    <ng-container>
      <picture>
        <ng-container *ngIf="webpSrcSet">
          <source type="image/webp" [attr.srcset]="webpSrcSet" />
        </ng-container>
        <img
          [attr.loading]="highPriority ? 'eager' : 'lazy'"
          [attr.fetchpriority]="highPriority ? 'high' : 'auto'"
          [attr.alt]="altText"
          [attr.role]="altText ? undefined : 'presentation'"
          [ngStyle]="node_0_img"
          [class]="node_1_img + ' img'"
          [attr.src]="image"
          [attr.srcset]="srcSetToUse"
          [attr.sizes]="sizes"
        />
      </picture>
      <ng-container *ngIf="node_2_Show">
        <div class="builder-image-sizer div" [ngStyle]="node_3_div"></div>
      </ng-container>
      <ng-container *ngIf="builderBlock?.children?.length && fitContent">
        <ng-content></ng-content>
      </ng-container>
      <ng-container *ngIf="!fitContent && builderBlock?.children?.length">
        <div class="div-2"><ng-content></ng-content></div>
      </ng-container>
    </ng-container>
  `, standalone: true, imports: [CommonModule], styles: [":host{display:contents}.img{opacity:1;transition:opacity .2s ease-in-out}.div{width:100%;pointer-events:none;font-size:0}.div-2{display:flex;flex-direction:column;align-items:stretch;position:absolute;top:0;left:0;width:100%;height:100%}\n"] }]
        }], propDecorators: { backgroundPosition: [{
                type: Input
            }], backgroundSize: [{
                type: Input
            }], className: [{
                type: Input
            }], aspectRatio: [{
                type: Input
            }], builderBlock: [{
                type: Input
            }], fitContent: [{
                type: Input
            }], image: [{
                type: Input
            }], src: [{
                type: Input
            }], srcset: [{
                type: Input
            }], noWebp: [{
                type: Input
            }], highPriority: [{
                type: Input
            }], altText: [{
                type: Input
            }], sizes: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,