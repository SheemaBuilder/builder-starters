import { componentInfo as accordionComponentInfo } from '../blocks/accordion/component-info';
import { default as Accordion } from '../blocks/accordion/index';
import { componentInfo as buttonComponentInfo } from '../blocks/button/component-info';
import { default as Button } from '../blocks/button/index';
import { componentInfo as columnsComponentInfo } from '../blocks/columns/component-info';
import { default as Columns } from '../blocks/columns/index';
import { componentInfo as fragmentComponentInfo } from '../blocks/fragment/component-info';
import { default as Fragment } from '../blocks/fragment/index';
import { componentInfo as imageComponentInfo } from '../blocks/image/component-info';
import { default as Image } from '../blocks/image/index';
import { componentInfo as personalizationContainerComponentInfo } from '../blocks/personalization-container/component-info';
import { default as PersonalizationContainer } from '../blocks/personalization-container/index';
import { componentInfo as sectionComponentInfo } from '../blocks/section/component-info';
import { default as Section } from '../blocks/section/index';
import { componentInfo as slotComponentInfo } from '../blocks/slot/component-info';
import { default as Slot } from '../blocks/slot/index';
import { componentInfo as symbolComponentInfo } from '../blocks/symbol/component-info';
import { default as Symbol } from '../blocks/symbol/index';
import { componentInfo as tabsComponentInfo } from '../blocks/tabs/component-info';
import { default as Tabs } from '../blocks/tabs/index';
import { componentInfo as textComponentInfo } from '../blocks/text/component-info';
import { default as Text } from '../blocks/text/index';
import { getExtraComponents } from './extra-components';
import { TARGET } from './target';
/**
 * Returns a list of all registered components.
 * NOTE: This needs to be a function to work around ESM circular dependencies.
 */
export const getDefaultRegisteredComponents = () => [{
        component: Button,
        ...buttonComponentInfo
    }, {
        component: Columns,
        ...columnsComponentInfo
    }, {
        component: Fragment,
        ...fragmentComponentInfo
    }, {
        component: Image,
        ...imageComponentInfo
    }, {
        component: Section,
        ...sectionComponentInfo
    }, {
        component: Slot,
        ...slotComponentInfo
    }, {
        component: Symbol,
        ...symbolComponentInfo
    }, {
        component: Text,
        ...textComponentInfo
    }, ...(TARGET === 'react' ? [{
            component: PersonalizationContainer,
            ...personalizationContainerComponentInfo
        }] : []), ...(TARGET === 'rsc' ? [] : [{
            component: Tabs,
            ...tabsComponentInfo
        }, {
            component: Accordion,
            ...accordionComponentInfo
        }]), ...getExtraComponents()];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGRlci1yZWdpc3RlcmVkLWNvbXBvbmVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uc3RhbnRzL2J1aWxkZXItcmVnaXN0ZXJlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLElBQUksc0JBQXNCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM3RixPQUFPLEVBQUUsT0FBTyxJQUFJLFNBQVMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxhQUFhLElBQUksbUJBQW1CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RixPQUFPLEVBQUUsT0FBTyxJQUFJLE1BQU0sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzNELE9BQU8sRUFBRSxhQUFhLElBQUksb0JBQW9CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN6RixPQUFPLEVBQUUsT0FBTyxJQUFJLE9BQU8sRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLElBQUkscUJBQXFCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzRixPQUFPLEVBQUUsT0FBTyxJQUFJLFFBQVEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxhQUFhLElBQUksa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRixPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxhQUFhLElBQUkscUNBQXFDLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUM1SCxPQUFPLEVBQUUsT0FBTyxJQUFJLHdCQUF3QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDaEcsT0FBTyxFQUFFLGFBQWEsSUFBSSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxPQUFPLElBQUksT0FBTyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsSUFBSSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25GLE9BQU8sRUFBRSxPQUFPLElBQUksSUFBSSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsSUFBSSxtQkFBbUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxPQUFPLElBQUksTUFBTSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGFBQWEsSUFBSSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25GLE9BQU8sRUFBRSxPQUFPLElBQUksSUFBSSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsSUFBSSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25GLE9BQU8sRUFBRSxPQUFPLElBQUksSUFBSSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFdkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVsQzs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBZ0MsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNoRixTQUFTLEVBQUUsTUFBTTtRQUNqQixHQUFHLG1CQUFtQjtLQUN2QixFQUFFO1FBQ0QsU0FBUyxFQUFFLE9BQU87UUFDbEIsR0FBRyxvQkFBb0I7S0FDeEIsRUFBRTtRQUNELFNBQVMsRUFBRSxRQUFRO1FBQ25CLEdBQUcscUJBQXFCO0tBQ3pCLEVBQUU7UUFDRCxTQUFTLEVBQUUsS0FBSztRQUNoQixHQUFHLGtCQUFrQjtLQUN0QixFQUFFO1FBQ0QsU0FBUyxFQUFFLE9BQU87UUFDbEIsR0FBRyxvQkFBb0I7S0FDeEIsRUFBRTtRQUNELFNBQVMsRUFBRSxJQUFJO1FBQ2YsR0FBRyxpQkFBaUI7S0FDckIsRUFBRTtRQUNELFNBQVMsRUFBRSxNQUFNO1FBQ2pCLEdBQUcsbUJBQW1CO0tBQ3ZCLEVBQUU7UUFDRCxTQUFTLEVBQUUsSUFBSTtRQUNmLEdBQUcsaUJBQWlCO0tBQ3JCLEVBQUUsR0FBRyxDQUFDLE1BQU0sS0FBSyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsU0FBUyxFQUFFLHdCQUF3QjtZQUNuQyxHQUFHLHFDQUFxQztTQUN6QyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsU0FBUyxFQUFFLElBQUk7WUFDZixHQUFHLGlCQUFpQjtTQUNyQixFQUFFO1lBQ0QsU0FBUyxFQUFFLFNBQVM7WUFDcEIsR0FBRyxzQkFBc0I7U0FDMUIsQ0FBQyxDQUFDLEVBQUUsR0FBRyxrQkFBa0IsRUFBRSxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wb25lbnRJbmZvIGFzIGFjY29yZGlvbkNvbXBvbmVudEluZm8gfSBmcm9tICcuLi9ibG9ja3MvYWNjb3JkaW9uL2NvbXBvbmVudC1pbmZvJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgQWNjb3JkaW9uIH0gZnJvbSAnLi4vYmxvY2tzL2FjY29yZGlvbi9pbmRleCc7XG5pbXBvcnQgeyBjb21wb25lbnRJbmZvIGFzIGJ1dHRvbkNvbXBvbmVudEluZm8gfSBmcm9tICcuLi9ibG9ja3MvYnV0dG9uL2NvbXBvbmVudC1pbmZvJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgQnV0dG9uIH0gZnJvbSAnLi4vYmxvY2tzL2J1dHRvbi9pbmRleCc7XG5pbXBvcnQgeyBjb21wb25lbnRJbmZvIGFzIGNvbHVtbnNDb21wb25lbnRJbmZvIH0gZnJvbSAnLi4vYmxvY2tzL2NvbHVtbnMvY29tcG9uZW50LWluZm8nO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBDb2x1bW5zIH0gZnJvbSAnLi4vYmxvY2tzL2NvbHVtbnMvaW5kZXgnO1xuaW1wb3J0IHsgY29tcG9uZW50SW5mbyBhcyBmcmFnbWVudENvbXBvbmVudEluZm8gfSBmcm9tICcuLi9ibG9ja3MvZnJhZ21lbnQvY29tcG9uZW50LWluZm8nO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBGcmFnbWVudCB9IGZyb20gJy4uL2Jsb2Nrcy9mcmFnbWVudC9pbmRleCc7XG5pbXBvcnQgeyBjb21wb25lbnRJbmZvIGFzIGltYWdlQ29tcG9uZW50SW5mbyB9IGZyb20gJy4uL2Jsb2Nrcy9pbWFnZS9jb21wb25lbnQtaW5mbyc7XG5pbXBvcnQgeyBkZWZhdWx0IGFzIEltYWdlIH0gZnJvbSAnLi4vYmxvY2tzL2ltYWdlL2luZGV4JztcbmltcG9ydCB7IGNvbXBvbmVudEluZm8gYXMgcGVyc29uYWxpemF0aW9uQ29udGFpbmVyQ29tcG9uZW50SW5mbyB9IGZyb20gJy4uL2Jsb2Nrcy9wZXJzb25hbGl6YXRpb24tY29udGFpbmVyL2NvbXBvbmVudC1pbmZvJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgUGVyc29uYWxpemF0aW9uQ29udGFpbmVyIH0gZnJvbSAnLi4vYmxvY2tzL3BlcnNvbmFsaXphdGlvbi1jb250YWluZXIvaW5kZXgnO1xuaW1wb3J0IHsgY29tcG9uZW50SW5mbyBhcyBzZWN0aW9uQ29tcG9uZW50SW5mbyB9IGZyb20gJy4uL2Jsb2Nrcy9zZWN0aW9uL2NvbXBvbmVudC1pbmZvJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgU2VjdGlvbiB9IGZyb20gJy4uL2Jsb2Nrcy9zZWN0aW9uL2luZGV4JztcbmltcG9ydCB7IGNvbXBvbmVudEluZm8gYXMgc2xvdENvbXBvbmVudEluZm8gfSBmcm9tICcuLi9ibG9ja3Mvc2xvdC9jb21wb25lbnQtaW5mbyc7XG5pbXBvcnQgeyBkZWZhdWx0IGFzIFNsb3QgfSBmcm9tICcuLi9ibG9ja3Mvc2xvdC9pbmRleCc7XG5pbXBvcnQgeyBjb21wb25lbnRJbmZvIGFzIHN5bWJvbENvbXBvbmVudEluZm8gfSBmcm9tICcuLi9ibG9ja3Mvc3ltYm9sL2NvbXBvbmVudC1pbmZvJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgU3ltYm9sIH0gZnJvbSAnLi4vYmxvY2tzL3N5bWJvbC9pbmRleCc7XG5pbXBvcnQgeyBjb21wb25lbnRJbmZvIGFzIHRhYnNDb21wb25lbnRJbmZvIH0gZnJvbSAnLi4vYmxvY2tzL3RhYnMvY29tcG9uZW50LWluZm8nO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBUYWJzIH0gZnJvbSAnLi4vYmxvY2tzL3RhYnMvaW5kZXgnO1xuaW1wb3J0IHsgY29tcG9uZW50SW5mbyBhcyB0ZXh0Q29tcG9uZW50SW5mbyB9IGZyb20gJy4uL2Jsb2Nrcy90ZXh0L2NvbXBvbmVudC1pbmZvJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgVGV4dCB9IGZyb20gJy4uL2Jsb2Nrcy90ZXh0L2luZGV4JztcbmltcG9ydCB0eXBlIHsgUmVnaXN0ZXJlZENvbXBvbmVudCB9IGZyb20gJy4uL2NvbnRleHQvdHlwZXMnO1xuaW1wb3J0IHsgZ2V0RXh0cmFDb21wb25lbnRzIH0gZnJvbSAnLi9leHRyYS1jb21wb25lbnRzJztcbmltcG9ydCB7IFRBUkdFVCB9IGZyb20gJy4vdGFyZ2V0JztcblxuLyoqXG4gKiBSZXR1cm5zIGEgbGlzdCBvZiBhbGwgcmVnaXN0ZXJlZCBjb21wb25lbnRzLlxuICogTk9URTogVGhpcyBuZWVkcyB0byBiZSBhIGZ1bmN0aW9uIHRvIHdvcmsgYXJvdW5kIEVTTSBjaXJjdWxhciBkZXBlbmRlbmNpZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXREZWZhdWx0UmVnaXN0ZXJlZENvbXBvbmVudHM6ICgpID0+IFJlZ2lzdGVyZWRDb21wb25lbnRbXSA9ICgpID0+IFt7XG4gIGNvbXBvbmVudDogQnV0dG9uLFxuICAuLi5idXR0b25Db21wb25lbnRJbmZvXG59LCB7XG4gIGNvbXBvbmVudDogQ29sdW1ucyxcbiAgLi4uY29sdW1uc0NvbXBvbmVudEluZm9cbn0sIHtcbiAgY29tcG9uZW50OiBGcmFnbWVudCxcbiAgLi4uZnJhZ21lbnRDb21wb25lbnRJbmZvXG59LCB7XG4gIGNvbXBvbmVudDogSW1hZ2UsXG4gIC4uLmltYWdlQ29tcG9uZW50SW5mb1xufSwge1xuICBjb21wb25lbnQ6IFNlY3Rpb24sXG4gIC4uLnNlY3Rpb25Db21wb25lbnRJbmZvXG59LCB7XG4gIGNvbXBvbmVudDogU2xvdCxcbiAgLi4uc2xvdENvbXBvbmVudEluZm9cbn0sIHtcbiAgY29tcG9uZW50OiBTeW1ib2wsXG4gIC4uLnN5bWJvbENvbXBvbmVudEluZm9cbn0sIHtcbiAgY29tcG9uZW50OiBUZXh0LFxuICAuLi50ZXh0Q29tcG9uZW50SW5mb1xufSwgLi4uKFRBUkdFVCA9PT0gJ3JlYWN0JyA/IFt7XG4gIGNvbXBvbmVudDogUGVyc29uYWxpemF0aW9uQ29udGFpbmVyLFxuICAuLi5wZXJzb25hbGl6YXRpb25Db250YWluZXJDb21wb25lbnRJbmZvXG59XSA6IFtdKSwgLi4uKFRBUkdFVCA9PT0gJ3JzYycgPyBbXSA6IFt7XG4gIGNvbXBvbmVudDogVGFicyxcbiAgLi4udGFic0NvbXBvbmVudEluZm9cbn0sIHtcbiAgY29tcG9uZW50OiBBY2NvcmRpb24sXG4gIC4uLmFjY29yZGlvbkNvbXBvbmVudEluZm9cbn1dKSwgLi4uZ2V0RXh0cmFDb21wb25lbnRzKCldIl19