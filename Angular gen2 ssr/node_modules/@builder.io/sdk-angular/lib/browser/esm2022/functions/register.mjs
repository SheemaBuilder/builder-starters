import { isBrowser } from './is-browser';
import { serializeIncludingFunctions } from './register-component';
const registry = {};
export function register(type, info) {
    if (type === 'plugin') {
        info = serializeIncludingFunctions(info);
    }
    let typeList = registry[type];
    if (!typeList) {
        typeList = registry[type] = [];
    }
    typeList.push(info);
    if (isBrowser()) {
        const message = {
            type: 'builder.register',
            data: {
                type,
                info
            }
        };
        try {
            parent.postMessage(message, '*');
            if (parent !== window) {
                window.postMessage(message, '*');
            }
        }
        catch (err) {
            console.debug('Could not postmessage', err);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZnVuY3Rpb25zL3JlZ2lzdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDekMsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFhbkUsTUFBTSxRQUFRLEdBRVYsRUFBRSxDQUFDO0FBR1AsTUFBTSxVQUFVLFFBQVEsQ0FBQyxJQUFZLEVBQUUsSUFBUztJQUM5QyxJQUFJLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDckIsSUFBSSxHQUFHLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzFDO0lBQ0QsSUFBSSxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDYixRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUNoQztJQUNELFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEIsSUFBSSxTQUFTLEVBQUUsRUFBRTtRQUNmLE1BQU0sT0FBTyxHQUFHO1lBQ2QsSUFBSSxFQUFFLGtCQUFrQjtZQUN4QixJQUFJLEVBQUU7Z0JBQ0osSUFBSTtnQkFDSixJQUFJO2FBQ0w7U0FDRixDQUFDO1FBQ0YsSUFBSTtZQUNGLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLElBQUksTUFBTSxLQUFLLE1BQU0sRUFBRTtnQkFDckIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7YUFDbEM7U0FDRjtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUM3QztLQUNGO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQnVpbGRlckJsb2NrIH0gZnJvbSAnLi4vdHlwZXMvYnVpbGRlci1ibG9jayc7XG5pbXBvcnQgdHlwZSB7IERlZXBQYXJ0aWFsIH0gZnJvbSAnLi4vdHlwZXMvZGVlcC1wYXJ0aWFsJztcbmltcG9ydCB7IGlzQnJvd3NlciB9IGZyb20gJy4vaXMtYnJvd3Nlcic7XG5pbXBvcnQgeyBzZXJpYWxpemVJbmNsdWRpbmdGdW5jdGlvbnMgfSBmcm9tICcuL3JlZ2lzdGVyLWNvbXBvbmVudCc7XG5leHBvcnQgaW50ZXJmYWNlIEluc2VydE1lbnVJdGVtIHtcbiAgbmFtZTogc3RyaW5nO1xuICBpY29uPzogc3RyaW5nO1xuICBpdGVtOiBEZWVwUGFydGlhbDxCdWlsZGVyQmxvY2s+O1xufVxuZXhwb3J0IGludGVyZmFjZSBJbnNlcnRNZW51Q29uZmlnIHtcbiAgbmFtZTogc3RyaW5nO1xuICBwcmlvcml0eT86IG51bWJlcjtcbiAgcGVyc2lzdD86IGJvb2xlYW47XG4gIGFkdmFuY2VkPzogYm9vbGVhbjtcbiAgaXRlbXM6IEluc2VydE1lbnVJdGVtW107XG59XG5jb25zdCByZWdpc3RyeToge1xuICBba2V5OiBzdHJpbmddOiBhbnlbXTtcbn0gPSB7fTtcbmV4cG9ydCBmdW5jdGlvbiByZWdpc3Rlcih0eXBlOiAnaW5zZXJ0TWVudScsIGluZm86IEluc2VydE1lbnVDb25maWcpOiB2b2lkO1xuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyKHR5cGU6IHN0cmluZywgaW5mbzogYW55KTogdm9pZDtcbmV4cG9ydCBmdW5jdGlvbiByZWdpc3Rlcih0eXBlOiBzdHJpbmcsIGluZm86IGFueSkge1xuICBpZiAodHlwZSA9PT0gJ3BsdWdpbicpIHtcbiAgICBpbmZvID0gc2VyaWFsaXplSW5jbHVkaW5nRnVuY3Rpb25zKGluZm8pO1xuICB9XG4gIGxldCB0eXBlTGlzdCA9IHJlZ2lzdHJ5W3R5cGVdO1xuICBpZiAoIXR5cGVMaXN0KSB7XG4gICAgdHlwZUxpc3QgPSByZWdpc3RyeVt0eXBlXSA9IFtdO1xuICB9XG4gIHR5cGVMaXN0LnB1c2goaW5mbyk7XG4gIGlmIChpc0Jyb3dzZXIoKSkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICB0eXBlOiAnYnVpbGRlci5yZWdpc3RlcicsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHR5cGUsXG4gICAgICAgIGluZm9cbiAgICAgIH1cbiAgICB9O1xuICAgIHRyeSB7XG4gICAgICBwYXJlbnQucG9zdE1lc3NhZ2UobWVzc2FnZSwgJyonKTtcbiAgICAgIGlmIChwYXJlbnQgIT09IHdpbmRvdykge1xuICAgICAgICB3aW5kb3cucG9zdE1lc3NhZ2UobWVzc2FnZSwgJyonKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZGVidWcoJ0NvdWxkIG5vdCBwb3N0bWVzc2FnZScsIGVycik7XG4gICAgfVxuICB9XG59Il19