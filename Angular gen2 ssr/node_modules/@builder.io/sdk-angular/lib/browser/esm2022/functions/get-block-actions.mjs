import { TARGET } from '../constants/target';
import { getEventHandlerName } from './event-handler-name';
import { createEventHandler } from './get-block-actions-handler';
export function getBlockActions(options) {
    const obj = {};
    const optionActions = options.block.actions ?? {};
    for (const key in optionActions) {
        // eslint-disable-next-line no-prototype-builtins
        if (!optionActions.hasOwnProperty(key)) {
            continue;
        }
        const value = optionActions[key];
        let eventHandlerName = getEventHandlerName(key);
        if (options.stripPrefix) {
            switch (TARGET) {
                case 'vue':
                    eventHandlerName = eventHandlerName.replace('v-on:', '');
                    break;
                case 'svelte':
                    eventHandlerName = eventHandlerName.replace('on:', '');
                    break;
            }
        }
        obj[eventHandlerName] = createEventHandler(value, options);
    }
    return obj;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWJsb2NrLWFjdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZnVuY3Rpb25zL2dldC1ibG9jay1hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUc3QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUlqRSxNQUFNLFVBQVUsZUFBZSxDQUFDLE9BRzBEO0lBQ3hGLE1BQU0sR0FBRyxHQUFZLEVBQUUsQ0FBQztJQUN4QixNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDbEQsS0FBSyxNQUFNLEdBQUcsSUFBSSxhQUFhLEVBQUU7UUFDL0IsaURBQWlEO1FBQ2pELElBQUksQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3RDLFNBQVM7U0FDVjtRQUNELE1BQU0sS0FBSyxHQUFHLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQyxJQUFJLGdCQUFnQixHQUFHLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hELElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUN2QixRQUFRLE1BQU0sRUFBRTtnQkFDZCxLQUFLLEtBQUs7b0JBQ1IsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDekQsTUFBTTtnQkFDUixLQUFLLFFBQVE7b0JBQ1gsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDdkQsTUFBTTthQUNUO1NBQ0Y7UUFDRCxHQUFHLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDNUQ7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUQVJHRVQgfSBmcm9tICcuLi9jb25zdGFudHMvdGFyZ2V0JztcbmltcG9ydCB0eXBlIHsgQnVpbGRlckNvbnRleHRJbnRlcmZhY2UgfSBmcm9tICcuLi9jb250ZXh0L3R5cGVzJztcbmltcG9ydCB0eXBlIHsgQnVpbGRlckJsb2NrIH0gZnJvbSAnLi4vdHlwZXMvYnVpbGRlci1ibG9jayc7XG5pbXBvcnQgeyBnZXRFdmVudEhhbmRsZXJOYW1lIH0gZnJvbSAnLi9ldmVudC1oYW5kbGVyLW5hbWUnO1xuaW1wb3J0IHsgY3JlYXRlRXZlbnRIYW5kbGVyIH0gZnJvbSAnLi9nZXQtYmxvY2stYWN0aW9ucy1oYW5kbGVyJztcbnR5cGUgQWN0aW9ucyA9IHtcbiAgW2luZGV4OiBzdHJpbmddOiAoZXZlbnQ6IEV2ZW50KSA9PiBhbnk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJsb2NrQWN0aW9ucyhvcHRpb25zOiB7XG4gIGJsb2NrOiBCdWlsZGVyQmxvY2s7XG4gIHN0cmlwUHJlZml4PzogYm9vbGVhbjtcbn0gJiBQaWNrPEJ1aWxkZXJDb250ZXh0SW50ZXJmYWNlLCAnbG9jYWxTdGF0ZScgfCAnY29udGV4dCcgfCAncm9vdFN0YXRlJyB8ICdyb290U2V0U3RhdGUnPik6IEFjdGlvbnMge1xuICBjb25zdCBvYmo6IEFjdGlvbnMgPSB7fTtcbiAgY29uc3Qgb3B0aW9uQWN0aW9ucyA9IG9wdGlvbnMuYmxvY2suYWN0aW9ucyA/PyB7fTtcbiAgZm9yIChjb25zdCBrZXkgaW4gb3B0aW9uQWN0aW9ucykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbiAgICBpZiAoIW9wdGlvbkFjdGlvbnMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gb3B0aW9uQWN0aW9uc1trZXldO1xuICAgIGxldCBldmVudEhhbmRsZXJOYW1lID0gZ2V0RXZlbnRIYW5kbGVyTmFtZShrZXkpO1xuICAgIGlmIChvcHRpb25zLnN0cmlwUHJlZml4KSB7XG4gICAgICBzd2l0Y2ggKFRBUkdFVCkge1xuICAgICAgICBjYXNlICd2dWUnOlxuICAgICAgICAgIGV2ZW50SGFuZGxlck5hbWUgPSBldmVudEhhbmRsZXJOYW1lLnJlcGxhY2UoJ3Ytb246JywgJycpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdzdmVsdGUnOlxuICAgICAgICAgIGV2ZW50SGFuZGxlck5hbWUgPSBldmVudEhhbmRsZXJOYW1lLnJlcGxhY2UoJ29uOicsICcnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgb2JqW2V2ZW50SGFuZGxlck5hbWVdID0gY3JlYXRlRXZlbnRIYW5kbGVyKHZhbHVlLCBvcHRpb25zKTtcbiAgfVxuICByZXR1cm4gb2JqO1xufSJdfQ==