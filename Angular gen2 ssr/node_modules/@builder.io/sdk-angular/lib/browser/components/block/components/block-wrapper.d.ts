import { SimpleChanges } from "@angular/core";
/**
 * This component renders a block's wrapper HTML element (from the block's `tagName` property).
 */
import type { BuilderContextInterface } from "../../../context/types";
import type { BuilderBlock } from "../../../types/builder-block";
import * as i0 from "@angular/core";
type BlockWrapperProps = {
    Wrapper: string;
    block: BuilderBlock;
    context: BuilderContextInterface;
    children?: any;
};
export default class BlockWrapper {
    block: BlockWrapperProps["block"];
    context: BlockWrapperProps["context"];
    Wrapper: BlockWrapperProps["Wrapper"];
    node_0_DynamicRenderer: any;
    node_1_DynamicRenderer: any;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BlockWrapper, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BlockWrapper, "block-wrapper", never, { "block": { "alias": "block"; "required": false; }; "context": { "alias": "context"; "required": false; }; "Wrapper": { "alias": "Wrapper"; "required": false; }; }, {}, never, ["*"], true, never>;
}
export {};
